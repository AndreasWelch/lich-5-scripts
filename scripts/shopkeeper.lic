class Shopkeeper
  UPDATER   = "update-playershops"
  MINUTE    = 60
  DOWN_TIME = MINUTE * 60 ## Seconds
  ##
  ## makes sure the wizard is invisible always
  ##
  HIDER = Thread.new do
    loop do
      wait_while do
        Script.running?(UPDATER)
      end
      if Spell[916].known? and Spell[916].affordable? and (Spell[916].timeleft < 10)
        Spell[916].cast
      end
      sleep 1
    end
  end
  ##
  ## cleanup from a single run
  ## of UPDATER 
  ##
  def self.teardown_run
    wait_while do
      Script.running?("repository")
    end
  end
  ##
  ## main event loop
  ##
  ## 1. runs UPDATER
  ## 2. hibernates
  ##
  def self.run
    loop do
      Script.run(UPDATER)
      teardown_run
      hibernate
    end
  end
  ##
  ## waits the number of seconds in DOWN_TIME
  ##
  def self.hibernate
    sleep DOWN_TIME
  end
  ##
  ## ensures we start running in a mapped room
  ##
  def self.find_mapped_room
    walk while Room.current.nil?
  end
  ##
  ## makes sure we destroy all dangling threads
  ##
  before_dying do
    Script.kill(UPDATER) if Script.running?(UPDATER)
    HIDER.kill.join
  end
  ##
  ## during network partitions it's possible to logout
  ## in a non-recoverable state for ;update-playershops
  ## so we must recover that first
  ##
  Shopkeeper.find_mapped_room
  ##
  ## run our keeper
  ##
  Shopkeeper.run
end