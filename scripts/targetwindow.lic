=begin
  TargetWindow.lic
  Wrayth window that lists hostile creatures and their status with click to target.
  Only updates when a target enters/leaves or has a status change.

  ;targetwindow window    - Opens a Wrayth window to display targets with status.
  ;targetwindow quick     - Displays targets and their status on the quick bar at the bottom.
  ;targetwindow flash     - Toggle between flashing box around current target.

        author: Nisugi
  contributors: Dalzashel
          game: Gemstone
          tags: hunting, combat, status tracking, target tracking
       version: 1.3
      required: Wrayth

  Change Log:
  v1.3 (2023-09-21)
    - Add showarms setting to include a total count of the number of arms in the room (useful for Sorcerer's to see if they still have arms left)
  v1.2 (2023-09-19)
    - adjusted when flashing box occurs
  v1.1 (2023-09-18)
    - typos
  v1.0 (2023-09-16)
    - Initial Release
=end

module TargetWindow
  before_dying { _respond("<closeDialog id='TargetWindow'/>") }
  CharSettings['flash_target'] = false if CharSettings['flash_target'].nil?
  @grasp_arms = Regexp.new(/^(?:arm|appendage|claw|limb|pincer|tentacle)s?$|^(?:palpus|palpi)$/i)

  def self.status_fix(status)
    case status
    when /rather calm/
      status = "calmed"
    when /to be frozen in place/
      status = "frozen"
    when /held in place/
      status = "held"
    when /lying down/
      status = "prone"
    end
    return "(#{status})"
    # /calmed|sleeping|webbed|stunned|kneeling|sitting|^lying|prone|frozen|held in place/ bound?
  end

  def self.watch_window
    old_targets = GameObj.targets
    _respond("<closeDialog id='TargetWindow'/><openDialog type='dynamic' id='TargetWindow' title='Targets' target='TargetWindow' scroll='manual' location='main' justify='3' height='68' resident='true'><dialogData id='Targets'></dialogData></openDialog>")
    loop {
      targets = GameObj.targets.select { |t| !(t.noun =~ @grasp_arms || (t.name =~ /^animated / && t.name != "animated slush")) }
      if targets.length > 0
        output = "<dialogData id='TargetWindow' clear='t'>"
        output += "<link id='total' value='Total Targets: #{targets.length}' cmd='target next' echo='target next' justify='3' top='3' left='0' height='15' width='195'/>"
        targets.each { |t|
          target_status = TargetWindow.status_fix(t.status) unless t.status.nil?
          output += "<link id='#{t.id}' value='#{target_status} #{t.name.split.map(&:capitalize).join(' ')}' cmd='target ##{t.id}' echo='target ##{t.id}'  justify='3' left='0' height='15' width='195'/>"
        }
        if CharSettings['show_arms']
          arms = GameObj.targets.select { |t| t.noun =~ @grasp_arms }
          output += "<link id='armCount' value='Total arms: #{arms.length}' cmd='incant 709' echo='incant 709' top='#{15 * (targets.length + 2)}' justify='3' left='0' height='15' width='195'/>"
        end

        output += "</dialogData>"
      else
        output = "<dialogData id='TargetWindow' clear='t'><label id= 'none' value='No Targets' justify='3' top='5' left='0' align='center' width='187'/></dialogData>"
      end
      _respond(output)
      wait_while { old_targets == GameObj.targets }
      old_targets = GameObj.targets
    }
  end

  def self.watch_quickbar
    old_targets = GameObj.targets
    loop {
      targets = GameObj.targets.select { |t| !(t.noun =~ @grasp_arms || t.name =~ /^animated /) }
      if targets.length > 0
        output = "<dialogData id='quick' clear='t'>"
        if CharSettings['show_arms']
          arms = GameObj.targets.select { |t| t.noun =~ @grasp_arms }
          output += "<link id='twarms' value='Total Arms: #{arms.length}  ' cmd='incant 709' echo='incant 709'/>"
        end
        output += "<link id='twtotal' value='Total Targets: #{targets.length}' cmd='target next' echo='target next'/>"
        targets.each { |t|
          target_status = TargetWindow.status_fix(t.status) unless t.status.nil?
          output += "<link id='#{t.id}' value='#{target_status} #{t.name.split.map(&:capitalize).join(' ')}  ' cmd='target ##{t.id}' echo='target ##{t.id}'/>"
        }
        output += "</dialogData>"
      else
        output = "<dialogData id='quick' clear='t'><label id= 'lblnone' value='No targets found.' top='0' left='0' align='center' width='187'/></dialogData>"
      end
      _respond(output)
      blink = %Q[<annotate dialog="quick" control="#{XMLData.current_target_id}" seconds="5"/>]
      _respond(blink) if CharSettings['flash_target'] unless XMLData.current_target_id.nil?
      curr_target = XMLData.current_target_id
      wait_while { old_targets == GameObj.targets && curr_target == XMLData.current_target_id }
      old_targets = GameObj.targets
    }
  end
end

if Script.current.vars[0].to_s =~ /^quick/
  TargetWindow.watch_quickbar
elsif Script.current.vars[0].to_s =~ /^window/
  TargetWindow.watch_window
elsif Script.current.vars[0].to_s =~ /^flash/
  if CharSettings['flash_target'] == false
    CharSettings['flash_target'] = true
    _respond("Current target will flash.")
    exit
  elsif CharSettings['flash_target'] == true
    CharSettings['flash_target'] = false
    _respond("Current target will not flash.")
    exit
  end
elsif Script.current.vars[0].to_s =~ /^showarms/
  CharSettings['show_arms'] = !CharSettings['show_arms']
  respond "Total arm count will #{CharSettings['show_arms'] == false ? "NOT " : ""}be shown."
else
  _respond("Please specify where the targets should be displayed.")
  _respond(";#{script.name} window")
  _respond(";#{script.name} quick")
  _respond("")
  _respond("You may also toggle the showing of a count of how many arms are in the room with:")
  _respond(";#{script.name} showarms")
  _respond("")
  exit
end
