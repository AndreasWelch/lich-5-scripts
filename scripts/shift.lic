=begin
  Automates planar shift (740).

  Usage:
    ;shift # (where # is the rune number from your leather book)

        author: elanthia-online
  contributors: Ryjex
          game: Gemstone
          tags: 720, planar shift, sorcerer, sorceror
       version: 1.0.0
      required: Lich >= 5.7.0

     Script currently in maintenance mode, not actively developed.
     Bugfixes or contributions can be made by visiting:
        https://github.com/elanthia-online/scripts

  Version Control:
    Major_change.feature_addition.bugfix
  v1.0.0 (2024-05-13)
    - migration from Ryjex author to EO
    - rubocop cleanup
    - converted into module
=end

lich_gem_requires = '5.7.0'

if Gem::Version.new(LICH_VERSION) < Gem::Version.new(lich_gem_requires)
  if $frontend == 'stormfront' || $frontend == 'profanity'
    _respond "\<preset id=\"speech\"\>" + "########################################" + "\<\/preset\>"
    _respond "\<preset id=\"thought\"\>" + "Script: #{Script.current.name} now requires a newer version of Lich (#{lich_gem_requires}+) to run." + "\<\/preset\>"
    _respond "\<preset id=\"thought\"\>" + "Please update to a newer version." + "\<\/preset\>"
    _respond ""
    _respond "\<preset id=\"thought\"\>" + "Currently Running Lich Version: #{Gem::Version.new(LICH_VERSION)}" + "\<\/preset\>"
    _respond "\<preset id=\"thought\"\>" + "For help updating visit: https://gswiki.play.net/Lich_(software)/Installation" + "\<\/preset\>"
    _respond "\<preset id=\"speech\"\>" + "########################################" + "\<\/preset\>"
  else
    _respond "##" + "########################################"
    _respond ">" + "Script: #{Script.current.name} now requires a newer version of Lich (#{lich_gem_requires}+) to run."
    _respond ">" + "Please update to a newer version."
    _respond ">" + ""
    _respond ">" + "Currently running Lich Version: #{Gem::Version.new(LICH_VERSION)}"
    _respond ">" + "For help updating visit: https://gswiki.play.net/Lich_(software)/Installation"
    _respond "##" + "########################################"
  end
  exit
end

module PlanarShift
  def self.stow_all
    fput "stow right" unless GameObj.right_hand.id.nil?
    fput "stow left" unless GameObj.left_hand.id.nil?
  end

  def self.main(destination)
    starting_room = Room.current.id
    PlanarShift.stow_all
    fput "get my leather book"
    sleep(1)
    if GameObj.right_hand.name !~ /leather book/
      echo "We seem to be missing our leather book..."
      exit
    end

    fput "get my crystalline chalk"

    if GameObj.left_hand.id.nil?
      echo "Buying some chalk..."
      chalk_cost = 40000
      start_silvers = Lich::Util.silver_count
      if start_silvers < chalk_cost
        Script.run("go2", "bank")
        fput "withdraw #{chalk_cost - start_silvers} silver"
      end
      if Lich::Util.silver_count < chalk_cost
        if Account.subscription == 'PREMIUM'
          echo "Not enough money in local bank, let's go check FWI bank."
          start_room = Room.current.id
          Script.run("go2", "3672")
          if Room.current.id != 3672
            echo "You should fix your go2 settings to be able to go2 to and from FWI."
            exit
          end
          fput "withdraw #{chalk_cost - start_silvers} silver"
          Script.run("go2", "#{start_room}")
          if Lich::Util.silver_count < chalk_cost
            echo "My apologies, #{Char.name}, but poor people can't buy chalk to shift!"
            exit
          end
        else
          echo "My apologies, #{Char.name}, but poor people can't buy chalk to shift!"
          exit
        end
      end
      Script.run("go2", "alchemist")
      search = /(\d+)\. some fine crystalline chalk/
      result = dothistimeout("order", 5, search)
      order_number = $1.to_i if result =~ search
      if order_number.nil?
        echo "Had trouble buying chalk for some reason... this should never happen."
        exit
      end
      fput "order #{order_number}"
      fput "buy"
    end

    Script.run("go2", "#{starting_room}")

    echo "Waiting on mana..." if Char.mana < 40
    sleep(0.1) while Char.mana < 40

    fput "draw summoning circle"
    sleep(1)
    waitrt?
    fput "draw pattern #{destination}"
    sleep(1)
    waitrt?
    if !!UserVars.inv
      fput "put my chalk in ##{inv.id}"
      fput "put my leather book in ##{inv.id}"
    else
      PlanarShift.stow_all
    end
    Spell[740].force_cast('circle')
  end

  def self.help
    respond ""
    respond "  Usage:"
    respond "    ;shift # (where # is the rune number from your leather book)"
    respond ""
    exit
  end
end

unless Spell[740].known?
  echo "You don't seem to know 740, you need to know Planar Shift to do this..."
  exit
end

case Script.current.vars[1]
when "help"
  PlanarShift.help
when nil
  PlanarShift.help
when 0
  PlanarShift.help
else
  PlanarShift.main(Script.current.vars[1].to_i)
end
