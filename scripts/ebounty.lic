

=begin

   author: elanthia-online
  contributers: Deysh, Nisugi, Tysong, Rinualdo
          game: Gemstone
          tags: bounty
       version: 1.0.0
           
  Improvements:

  v1.0.0 (2022-05-18)
    - initial framework and ui


=end

require 'yaml' 

module EBounty

  EBounty_version = '1.0.0'
  @@data ||= nil
 
   ##### Data & Setup Start #####
  
  def self.version_check
  
    # Check version of Lich for compatibility
    lich_gem_requires = '5.4.1'
    infomon_gem_requires = '1.18.11'
    infomon_version = '0.0.0'
    infomon_data = open("#{SCRIPT_DIR}/infomon.lic", 'r').read
    if infomon_data =~ /^=begin\r?\n?(.+?)^=end/m
        comments = $1.split("\n")
    else
        comments = []
        infomon_data.split("\n").each {|line|
            if line =~ /^[\t\s]*#/
                comments.push(line)
            elsif line !~ /^[\t\s]*$/
                break
            end
        }
    end
    for line in comments
        if line =~ /^[\s\t#]*version:[\s\t]*([\w,\s\.\d]+)/i
            infomon_version = $1.sub(/\s\(.*?\)/, '').strip
        end
    end

    if Gem::Version.new(LICH_VERSION) < Gem::Version.new(lich_gem_requires) || Gem::Version.new(infomon_version) < Gem::Version.new(infomon_gem_requires)
       if $frontend == 'stormfront' || $frontend == 'profanity'
         _respond "\<preset id=\"speech\"\>" + "########################################" + "\<\/preset\>"
         _respond "\<preset id=\"thought\"\>" + "Script: #{Script.self} now requires a newer version of Lich(#{lich_gem_requires}+) & Infomon (#{infomon_gem_requires}) to run." + "\<\/preset\>"
         _respond "\<preset id=\"thought\"\>" + "Please update to a newer version." + "\<\/preset\>"
         _respond ""
         _respond "\<preset id=\"thought\"\>" + "Currently Running Lich Version: #{Gem::Version.new(LICH_VERSION) }" + "\<\/preset\>"
         _respond "\<preset id=\"thought\"\>" + "Currently Running Infomon Version: #{Gem::Version.new(infomon_version) }" + "\<\/preset\>"
         _respond "\<preset id=\"thought\"\>" + "For help updating visit: https://gswiki.play.net/Lich_(software)/Installation" + "\<\/preset\>"
         _respond "\<preset id=\"speech\"\>" + "########################################" + "\<\/preset\>"
       else
         _respond "##" + "########################################"
         _respond ">" + "Script: #{Script.name} now requires a newer version of Lich(#{lich_gem_requires}+) & Infomon (#{infomon_gem_requires}) to run."
         _respond ">" + "Please update to a newer version."
         _respond ">" + ""
         _respond ">" + "Currently Running Lich Version: #{Gem::Version.new(LICH_VERSION) }"
         _respond ">" + "Currently Running Infomon Version: #{Gem::Version.new(infomon_version) }"
         _respond ">" + "For help updating visit: https://gswiki.play.net/Lich_(software)/Installation"
         _respond "##" + "########################################"
       end
       exit
    end
  
  end
  
  def self.load_defaults()
    
    default_hash = {
      :bounty_types=>["boss_culling", "culling", "gem_collecting", "heirloom_loot", "skinning"],
      :selling_script=>"",
      :default_profile=>"",
      
    }
    Dir.mkdir("#{$data_dir}#{XMLData.game}") unless File.exist?("#{$data_dir}#{XMLData.game}")
    Dir.mkdir("#{$data_dir}#{XMLData.game}/#{Char.name}") unless File.exist?("#{$data_dir}#{XMLData.game}/#{Char.name}")
    Dir.mkdir("#{$data_dir}#{XMLData.game}/#{Char.name}/bigshot_profiles") unless File.exist?("#{$data_dir}#{XMLData.game}/#{Char.name}/bigshot_profiles")

    File.write("#{$data_dir}#{XMLData.game}/#{Char.name}/ebounty.yaml", default_hash.to_yaml)
   
    default_hash
  end

  def self.load_profile(name: Char.name)
    if name != nil
      filename = "#{$data_dir}#{XMLData.game}/#{name}/ebounty.yaml"
      if File.exist?("#{filename}") && name == Char.name
        settings_hash = YAML.load_file(filename)      
      elsif !File.exist?("#{filename}") && name != Char.name
        EBounty.msg("error", " EBounty.load_profile: Attempt to load a profile that does not exist.")
      elsif !File.exist?("#{filename}") && name == Char.name
        EBounty.msg("info", " No current settings found.  Loading defaults for configurtion.")
        EBounty.msg("info", " Suggest you configure to your needs with ;ebounty setup")
        settings_hash = EBounty.load_defaults()
      else
        EBounty.msg("error", " EBounty.load_profile: There was an unknown error with loading a profile")
      end
    else
      EBounty.msg("error", " EBounty.load_profile: name not defined")
    end
 
    settings_hash
    
  end

  def self.save_profile(name: Char.name)
    
    #This adds it to the profile for backward compatability
    if name != nil
      filename = "#{$data_dir}#{XMLData.game}/#{Char.name}/ebounty.yaml"
      if name == Char.name
        File.write(filename, EBounty.data.settings.to_yaml)
        EBounty.msg("info", " Settings saved to file: #{filename}.")
      elsif File.exist?("#{filename}") && name != Char.name
        EBounty.msg("info", " You are attempt to overwrite another profile!")
        EBounty.msg("info", " If you wish to overwrite, please ;unpause ebounty.")
        EBounty.msg("info", " Else ;kill ebounty and choose another filename.")
        pause_script
        File.write(filename, EBounty.data.settings.to_yaml)
        EBounty.msg("info", " Settings saved to file: #{filename}.")        
      elsif !File.exist?("#{filename}") && name != Char.name
        File.write(filename, EBounty.data.settings.to_yaml)
        EBounty.msg("info", " Settings are being saved to another profile!")
        EBounty.msg("info", " Settings saved to file: #{filename}.")
      else
        EBounty.msg("error", " EBounty.save_profile: There was an unknown error with saving a profile")
      end
    end
       
  end

  def self.load(settings)
    @@data = Data.new(settings)
  end

  def self.data
    @@data
  end

  def self.set_variables
   
    unless EBounty.data.settings[:basic]
      #Check if a default profile was selected
      if EBounty.data.settings[:default_profile].to_s.empty? 
        EBounty.msg "error", 'Please select a Gem/Default profile in "Profiles" tab. Ebounty needs this to work right. Exiting...'
        exit
      end
       
      if EBounty.data.settings[:resting_room].to_s.empty?
        EBounty.msg "error", 'Please select a Resting Room ID on the General tab. Ebounty needs this to work right. Exiting...'
        exit
      end
       
      #Load the default profile
      profile = "#{EBounty.data.dir}/#{EBounty.data.settings[:default_profile]}.yaml"
      UserVars.op = YAML.load_file(profile)
    end
  
    #Lets find the containers we need
    container_match = /<a exist="([^"]+)" noun="[^"]+">[^(.]+\(([a-z]+)\)/
    container_lines = Lich::Util.quiet_command_xml("stow list",/<output class="mono"\/>/)  

    container_lines.each {|line|   
      if line =~ container_match 
        EBounty.data.sacks.store(Regexp.last_match(2), GameObj.inv.find { |i| i.id == Regexp.last_match(1) })
        EBounty.data.sacks.delete(Regexp.last_match(2)) unless EBounty.data.sacks[Regexp.last_match(2)]    
      end
    }
   
  end

  def self.bounty_check
    Task.bounty_check
  end
 
  def self.run_scripts(scripts)
    scripts.split(/,\s*/).each do |i|
      tokens = i.split(/\s+/)
      if (tokens.size > 1)
        start_script tokens[0], tokens[1..-1]   
        wait_until { !running? tokens[0] }
      else
        start_script tokens[0]   
        wait_until { !running? tokens[0] }
      end
    end
  end

  def self.msg(type = info, text)
     
    #color options - set type to use
    #yellow, orange, teal, green, plain
       
    return if type == "debug" && !EBounty.data.settings[:debug]
       
    if text.class == Hash
      text = text.inspect.gsub("#<", "#")
    elsif text.class == Array
      text = text.to_s
    elsif text.class == String
      text = text.gsub("#<", "#")
    end
    
    type = type == "debug" ? "speech" : type
    
    Lich::Messaging.msg(type, text)
  
  end

  def self.switch_profile(critter = nil, location = nil)
   
    if (EBounty.data.settings[:creature_exclude].length.positive? && critter.downcase =~ Regexp.union(EBounty.data.settings[:creature_exclude]))
      echo "#{critter} is in the excluded list. Turning in bounty!"
      sleep 2
      Task.bounty_remove
      return
    end  
 
    exit if EBounty.data.settings[:basic]
 
    EBounty.data.creature = critter
    profile_letter = nil
  
    options = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j"]
 
    #Check for full name first
    options.each{ |letter| profile_letter = letter if EBounty.data.settings["names_#{letter}".to_sym] =~ /#{critter}/i}
 
    if profile_letter
      EBounty.data.settings[:only_required_creatures] = EBounty.data.settings["kill_#{profile_letter}".to_sym] ? true : false
      dir = EBounty.data.dir
      profile = "#{dir}/#{EBounty.data.settings["profile_#{profile_letter}".to_sym] + ".yaml"}"     
      UserVars.op = YAML.load_file(profile)
      return
    elsif critter == "bandits" && !EBounty.data.settings[:bandits_profile].to_s.empty? 
      EBounty.data.settings[:only_required_creatures] = EBounty.data.settings[:kill_bandits] ? true : false
      dir = EBounty.data.dir
      profile = "#{dir}/#{EBounty.data.settings[:bandits_profile] + ".yaml"}"         
      UserVars.op = YAML.load_file(profile)
      return    
    else
      EBounty.msg "info", " No Profile found for #{critter}. Please check the Profiles tab. Exiting..."
      EBounty.go2(EBounty.data.settings[:resting_room])
      exit
    end

  end
  
  def self.test
  
    echo " Ebounty Version: #{EBounty_version}"
    echo ""
    echo "--------------- Settings ---------------"
    echo *EBounty.data.settings
    echo "----------------------------------------"
    echo ""
   
  end
  
  def self.go2(place)
    fput('unhide') if (hidden? || invisible?)

    return if Room.current.id == place.to_i || Room.current.tags.include?(place)

    if Room.current.id.nil?
      if EBounty.data.settings[:debug]
        EBounty.msg "info", "unknown room location: hope you know what you're doing"
      else
        EBounty.msg "error", 'unknown room location'
      end
    end
    Script.run('go2', "#{place} --disable-confirm", { quiet: true })
  end
  
  def self.go2_rest
  
    if !EBounty.data.settings[:resting_room].to_s.empty? && XMLData.game != "GSF"
      town_id = Room[EBounty.data.settings[:resting_room]].find_nearest_by_tag("town")
    else
      town_id = Room.current.find_nearest_by_tag("town")
    end
       
    resting_spots = { 
      228 => [1259,14627,8859,1263,228,318,288,477], #town center => noded rooms
      3668 => [3668,28742,18258,17589,17587],
      1005 => [1005,14029],     
    }
  
    if EBounty.data.settings[:rest_random]
      return if resting_spots[town_id].include?(Room.current.id)
      if resting_spots[town_id]
        EBounty.go2(resting_spots[town_id].sample)
      else
        EBounty.go2("town")
      end
    elsif !EBounty.data.settings[:resting_room].to_s.empty? && XMLData.game != "GSF"    
      EBounty.go2(EBounty.data.settings[:resting_room])
    elsif XMLData.game == "GSF"
      EBounty.go2(20239)
    else     
      EBounty.go2("town")
    end
      
    EBounty.wait_rt
    
    if checkpcs.include?('Nexushealbot')
      fput "join Nexushealbot"
      fput "action just nudged you"
      sleep 15
    end
     
  end
  
  def self.silver_check  
    return Lich::Util.silver_count
  end
  
  def self.silver_deposit
  
    return unless EBounty.silver_check.positive? 
    
    EBounty.go2('bank') 
    fput('deposit all')  
    
  end
  
  def self.wait_rt 
    sleep 0.2
    wait_while { checkrt > 0 }
    sleep 0.2 
  end
  
  ##### Data & Setup End #####

  # Global data used by EBounty
  class Data
    attr_accessor  :settings, :reason, :rest_time, :rest_options, :lootsack, :hunting_spots, :wait, :herbalist_rooms, :remaining_skins, :skin, :remaining_gems, :gem, :dir,
                   :creature, :sacks, :start_room, :bandit_start, :bandit_boundaries, :guard_regex

    def initialize(settings)
      
      @settings = settings     
      @reason = ''
      @rest_time = Time.now
      @wait = true
      @sacks = {}
      @rest_options  = ["experience", "inventory", "health", "resources", "info"]
      @herbalist_rooms = [2406, 3824, 1851, 10396, 640, 5722, 5406, 11002, 9505, 28939, 28598]
      @remaining_skins = 0
      @skin = nil
      @remaining_gems = 0
      @gem = nil
      @dir = "#{$data_dir}#{XMLData.game}/#{Char.name}/bigshot_profiles"
      @creature = nil
      @start_room = nil
      @bandit_start = nil
      @bandit_boundaries = nil
      
      @guard_regex = Regexp.union(
        /suppress bandit activity|bandits you encounter/,
        /particularly dangerous|cull their numbers|(?!.*bandit)suppress .* activity/,
        /SEARCH the area|do a thorough SEARCH/,
        /LOOT the item from its corpse/,
        /I don't have any tasks for you right now/,
        /Ah, so you have returned/,
        /You have completed your task/
      )
      
      
      if !UserVars.lootsack.nil?
        @lootsack = GameObj.inv.find do |i|
          i.noun =~ /\b#{UserVars.lootsack}\b/i or
          i.name =~ /#{UserVars.lootsack}/i
        end
      end

      if @lootsack.nil?
        respond "set \"lootsack\" before using this script: ;vars set lootsack=<item>"
        exit
      end
     
    end
  end

  class Setup < Gtk::Builder
    
    @@categories = {
      general: {
        bounty_types: { default: [] },
        escort_types: { default: [] },
        creature_exclude: {
          default: [],
          load: proc do |store, setting|
            store.clear
            setting.each do |text|
              iter = store.append
              iter[0] = text
            end
          end,
          delete: proc do |_, selected, setting|
            setting.delete(selected.get_value(0))
            setting.uniq!.sort!
          end,
          set: proc do |_, text, setting|
            next if setting.include?(text)

            setting.push(text)
            setting.uniq!.sort!
          end
        },       
        culling_max:              { default: 30 },
        gem_max:                  { default: 30 },
        herb_max:                 { default: 30 },
        skin_max:                 { default: 30 },
        extra_skin:               { default:  0 },
        exp_pause:                { default: false },
        only_required_creatures:  { default: false },
        use_vouchers:             { default: false },
        once_and_done:            { default: false },
        rest_random:              { default: false },
        basic:                    { default: false },  
        resting_room:             { default: '' },
        selling_script:           { default: '' },
        healing_script:           { default: '' },
        default_name:             { default: '' },
        default_profile:          { default: '' },
        profile_name_bandits:     { default: '' },
        bandits_profile:          { default: '' },
        kill_bandits:             { default: false },
        names_a:                  { default: '' },
        profile_a:                { default: '' },
        profile_name_a:           { default: '' },
        kill_a:                   { default: false },
        names_b:                  { default: '' },
        profile_b:                { default: '' },
        profile_name_b:           { default: '' },
        kill_b:                   { default: false },
        names_c:                  { default: '' },
        profile_c:                { default: '' },
        profile_name_c:           { default: '' },
        kill_c:                   { default: false },
        names_d:                  { default: '' },
        profile_d:                { default: '' },
        profile_name_d:           { default: '' },
        kill_d:                   { default: false },
        names_e:                  { default: '' },
        profile_e:                { default: '' },
        profile_name_e:           { default: '' },
        kill_e:                   { default: false },
        names_f:                  { default: '' },
        profile_f:                { default: '' },
        profile_name_f:           { default: '' },
        kill_f:                   { default: false },
        names_g:                  { default: '' },
        profile_g:                { default: '' },
        profile_name_g:           { default: '' },
        kill_g:                   { default: false },
        names_h:                  { default: '' },
        profile_h:                { default: '' },
        profile_name_h:           { default: '' },
        kill_h:                   { default: false },
        names_i:                  { default: '' },
        profile_i:                { default: '' },
        profile_name_i:           { default: '' },
        kill_i:                   { default: false },
        names_j:                  { default: '' },
        profile_j:                { default: '' },
        profile_name_j:           { default: '' },
        kill_j:                   { default: false },
      },       
      internal: {
        silence: { default: true },
        debug: { default: false },       
      }
    }

    def self.get_category(key)
      @@categories.each { |category, data| return category unless data[key].nil? }
      nil
    end

    def self.get_setting(key)
      cat = Setup.get_category(key)
      return nil if cat.nil?

      @@categories[cat].each { |setting, data| return data if setting == key }
      nil
    end

    def initialize(settings)
      super()

      @settings = settings

      # set default values if they don't exist
      @@categories.each do |_, data|  
      
        data.each { |key, value| @settings[key] = value[:default] if @settings[key].nil? }
      end

      # remove settings that doesn't exist
      @settings.delete_if { |key, _| next Setup.get_category(key).nil? }

      # use a GTK Builder to setup all the basics of the window then expand on that base
      return unless defined?(Gtk) && Gtk::Version::MAJOR == 3

      Gtk.queue do
       # add_from_file("#{$data_dir}ebounty.ui")
        add_from_string(ui)
        load_settings

        self['main'].keep_above = true
        self['main'].set_title "EBounty Setup v#{EBounty_version}"

        # connect signals after settings are loaded to a bunch of handlers don't trigger
        connect_signals { |handler| method(handler) }
      end
    end

    def ui
      '<?xml version="1.0" encoding="UTF-8"?><!-- Generated with glade 3.38.2 --><interface><requires lib="gtk+" version="3.20"/><object class="GtkListStore" id="creature_exclude_store"><columns><!-- column-name exclusion --><column type="gchararray"/></columns></object><object class="GtkAdjustment" id="culling_adjustment"><property name="upper">100</property><property name="step-increment">1</property><property name="page-increment">10</property>
      </object><object class="GtkAdjustment" id="extra_skin_adjustment"><property name="upper">100</property><property name="step-increment">1</property><property name="page-increment">10</property></object><object class="GtkAdjustment" id="gem_adjustment"><property name="upper">100</property><property name="step-increment">1</property><property name="page-increment">10</property></object><object class="GtkAdjustment" id="herb_adjustment"><property name="upper">100</property><property name="step-increment">1</property><property name="page-increment">10</property>
      </object><object class="GtkAdjustment" id="skin_adjustment"><property name="upper">100</property><property name="step-increment">1</property><property name="page-increment">10</property></object><object class="GtkWindow" id="main"><property name="width-request">750</property><property name="height-request">600</property><property name="can-focus">False</property><property name="title" translatable="yes">EBounty Setup</property><property name="modal">True</property><signal name="destroy" handler="on_destroy" swapped="no"/><child><object class="GtkBox"><property name="visible">True</property><property name="can-focus">False</property><property name="orientation">vertical</property><property name="spacing">5</property><child><object class="GtkNotebook"><property name="visible">True</property><property name="can-focus">True</property><property name="hexpand">True</property><property name="vexpand">True</property><child><object class="GtkScrolledWindow"><property name="visible">True</property><property name="can-focus">True</property><property name="shadow-type">in</property><child><object class="GtkViewport"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkBox"><property name="visible">True</property><property name="can-focus">False</property><property name="orientation">vertical</property><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=5 n-rows=2 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="row-spacing">2</property><property name="column-spacing">5</property><property name="column-homogeneous">True</property><child><object class="GtkCheckButton" id="bounty_types:boss_culling"><property name="label" translatable="yes">Boss Creature</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="bounty_types:culling"><property name="label" translatable="yes">Culling</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">1</property><property name="top-attach">0</property>
      </packing></child><child><object class="GtkCheckButton" id="bounty_types:escort"><property name="label" translatable="yes">Escort</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">start</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="bounty_types:foraging"><property name="label" translatable="yes">Foraging</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">start</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">3</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="bounty_types:gem_collecting"><property name="label" translatable="yes">Gem Collecting</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">4</property><property name="top-attach">0</property>
      </packing></child><child><object class="GtkCheckButton" id="bounty_types:heirloom_loot"><property name="label" translatable="yes">Heirloom (loot)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">1</property>
      </packing></child><child><object class="GtkCheckButton" id="bounty_types:heirloom_search"><property name="label" translatable="yes">Heirloom (search)</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">start</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">1</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="bounty_types:kill_bandits"><property name="label" translatable="yes">Kill Bandits</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">start</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="bounty_types:rescue"><property name="label" translatable="yes">Rescue</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">start</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">3</property><property name="top-attach">1</property>
      </packing></child><child><object class="GtkCheckButton" id="bounty_types:skinning"><property name="label" translatable="yes">Skinning</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">4</property><property name="top-attach">1</property></packing></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Bounty Types</property>
      </object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">0</property></packing></child><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=3 n-rows=6 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="row-spacing">5</property><property name="column-spacing">5</property><child><object class="GtkCheckButton" id="exp_pause"><property name="label" translatable="yes">Rest when mind full</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">start</property><property name="margin-start">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-bottom">15</property><property name="label" translatable="yes">Selling Script:</property></object><packing><property name="left-attach">1</property><property name="top-attach">0</property><property name="height">2</property>
      </packing></child><child><object class="GtkEntry" id="selling_script"><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="max-width-chars">40</property><property name="placeholder-text" translatable="yes">Defaults to eloot</property></object><packing><property name="left-attach">2</property><property name="top-attach">0</property><property name="height">2</property></packing></child><child><object class="GtkCheckButton" id="once_and_done"><property name="label" translatable="yes">Run one bounty and quit</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="tooltip-text" translatable="yes">When checked this will quit after one bounty.</property><property name="halign">start</property><property name="margin-start">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="rest_random"><property name="label" translatable="yes">Rest at random nodes in town</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="tooltip-text" translatable="yes">When checked this will rest in a random node within town. 
      </property><property name="halign">start</property><property name="margin-start">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">3</property><property name="width">2</property></packing></child><child><object class="GtkCheckButton" id="use_vouchers"><property name="label" translatable="yes">Use Vouchers</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">start</property><property name="margin-start">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">2</property></packing></child><child><object class="GtkEntry" id="resting_room"><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="max-width-chars">40</property><property name="placeholder-text" translatable="yes"></property></object><packing><property name="left-attach">2</property><property name="top-attach">4</property><property name="height">2</property>
      </packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-start">70</property><property name="margin-bottom">5</property><property name="label" translatable="yes">Resting Room ID:</property></object><packing><property name="left-attach">1</property><property name="top-attach">4</property><property name="height">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">end</property><property name="margin-bottom">15</property><property name="label" translatable="yes">Healing Script:</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">2</property><property name="height">2</property></packing></child><child><object class="GtkEntry" id="healing_script"><property name="visible">True</property><property name="can-focus">True</property><property name="valign">start</property><property name="placeholder-text" translatable="yes">Defaults to eherb</property></object><packing><property name="left-attach">2</property><property name="top-attach">2</property><property name="height">2</property>
      </packing></child><child><object class="GtkCheckButton" id="basic"><property name="label" translatable="yes">Just the Basics</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="tooltip-text" translatable="yes">Only pickup and return bounties based on settings. No automatic hunting or whatnot.
      </property><property name="halign">start</property><property name="margin-start">5</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">4</property></packing></child><child><placeholder/></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Misc</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">1</property></packing>
      </child><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=6 n-rows=2 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-end">7</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="row-spacing">5</property><property name="column-spacing">5</property><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Max number of critters you\'ll kill for a culling bounty.</property><property name="halign">end</property><property name="margin-start">5</property><property name="label" translatable="yes">  Max Culling Kills (?)</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkSpinButton" id="culling_max"><property name="visible">True</property><property name="can-focus">True</property><property name="adjustment">culling_adjustment</property><property name="numeric">True</property><property name="value">30</property></object><packing><property name="left-attach">1</property><property name="top-attach">0</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Max number of gems you\'re willing to find.</property><property name="halign">end</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Max Gems (?)</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">1</property></packing></child><child><object class="GtkSpinButton" id="gem_max"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-bottom">10</property><property name="adjustment">gem_adjustment</property><property name="numeric">True</property><property name="value">30</property></object><packing><property name="left-attach">1</property><property name="top-attach">1</property>
      </packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">     </property></object><packing><property name="left-attach">2</property><property name="top-attach">1</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Max number of herbs you\'re willing to find.</property><property name="halign">end</property><property name="margin-start">20</property><property name="label" translatable="yes">Max Herbs (?)</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">0</property></packing></child><child><object class="GtkSpinButton" id="herb_max"><property name="visible">True</property><property name="can-focus">True</property><property name="adjustment">herb_adjustment</property><property name="numeric">True</property><property name="value">30</property></object><packing><property name="left-attach">3</property><property name="top-attach">0</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Max number of skins you\'re willing to find.</property><property name="halign">end</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Max Skins (?)</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">1</property></packing></child><child><object class="GtkSpinButton" id="skin_max"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-bottom">10</property><property name="adjustment">skin_adjustment</property><property name="numeric">True</property><property name="value">30</property></object><packing><property name="left-attach">3</property><property name="top-attach">1</property>
      </packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Number of extra skins to get before trying to turn them in.</property><property name="margin-start">20</property><property name="margin-bottom">10</property><property name="label" translatable="yes"># of extra skins(?)</property></object><packing><property name="left-attach">4</property><property name="top-attach">1</property>
      </packing></child><child><object class="GtkSpinButton" id="extra_skin"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-bottom">10</property><property name="text" translatable="yes">30</property><property name="adjustment">extra_skin_adjustment</property><property name="numeric">True</property></object><packing><property name="left-attach">5</property><property name="top-attach">1</property></packing></child><child><placeholder/></child><child><placeholder/>
      </child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Task Limits</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">1</property></packing></child></object></child></object></child></object></child><child type="tab"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">General</property>
      </object><packing><property name="tab-fill">False</property></packing></child><child><object class="GtkScrolledWindow"><property name="visible">True</property><property name="can-focus">True</property><property name="shadow-type">in</property><child><object class="GtkViewport"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkBox"><property name="visible">True</property><property name="can-focus">False</property><property name="orientation">vertical</property><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">6</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=9 n-rows=9 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="row-spacing">20</property><property name="column-spacing">5</property><property name="row-homogeneous">True</property><property name="column-homogeneous">True</property><child><object class="GtkCheckButton" id="escort_types:landing_to_illy"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">6</property><property name="top-attach">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Destination </property></object><packing><property name="left-attach">1</property><property name="top-attach">0</property><property name="width">7</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Icemule</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">4</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Solhaven</property></object><packing><property name="left-attach">1</property><property name="top-attach">3</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Wehnimer\'s</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Start From</property><property name="angle">90</property></object><packing><property name="left-attach">0</property><property name="top-attach">2</property><property name="height">7</property></packing></child><child><object class="GtkCheckButton" id="escort_types:vaalor_to_landing"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">7</property></packing></child><child><object class="GtkCheckButton" id="escort_types:illy_to_landing"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">6</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:zul_to_landing"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">5</property></packing></child><child><object class="GtkCheckButton" id="escort_types:icemule_to_landing"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">4</property></packing></child><child><object class="GtkCheckButton" id="escort_types:solhaven_to_landing"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">3</property>
      </packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">--</property></object><packing><property name="left-attach">2</property><property name="top-attach">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Zul Logoth</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">5</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Ta\'llistim</property></object><packing><property name="left-attach">1</property><property name="top-attach">6</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Ta\'Vaalor</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">7</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Wehnimer\'s</property></object><packing><property name="left-attach">2</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="escort_types:vaalor_to_solhaven"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">3</property><property name="top-attach">7</property></packing></child><child><object class="GtkCheckButton" id="escort_types:illy_to_solhaven"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">3</property><property name="top-attach">6</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:zul_to_solhaven"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">3</property><property name="top-attach">5</property></packing></child><child><object class="GtkCheckButton" id="escort_types:icemule_to_solhaven"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">3</property><property name="top-attach">4</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">--</property></object><packing><property name="left-attach">3</property><property name="top-attach">3</property></packing></child><child><object class="GtkCheckButton" id="escort_types:landing_to_solhaven"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">3</property><property name="top-attach">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Solhaven</property></object><packing><property name="left-attach">3</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="escort_types:vaalor_to_icemule"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">4</property><property name="top-attach">7</property></packing></child><child><object class="GtkCheckButton" id="escort_types:illy_to_icemule"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">4</property><property name="top-attach">6</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:zul_to_icemule"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">4</property><property name="top-attach">5</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">--</property>
      </object><packing><property name="left-attach">4</property><property name="top-attach">4</property></packing></child><child><object class="GtkCheckButton" id="escort_types:solhaven_to_icemule"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">4</property><property name="top-attach">3</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:landing_to_icemule"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">4</property><property name="top-attach">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Icemule</property>
      </object><packing><property name="left-attach">4</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="escort_types:vaalor_to_zul"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">5</property><property name="top-attach">7</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:illy_to_zul"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">5</property><property name="top-attach">6</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">--</property>
      </object><packing><property name="left-attach">5</property><property name="top-attach">5</property></packing></child><child><object class="GtkCheckButton" id="escort_types:icemule_to_zul"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">5</property><property name="top-attach">4</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:solhaven_to_zul"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">5</property><property name="top-attach">3</property></packing></child><child><object class="GtkCheckButton" id="escort_types:landing_to_zul"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">5</property><property name="top-attach">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Zul Logoth</property></object><packing><property name="left-attach">5</property><property name="top-attach">1</property></packing></child><child><object class="GtkCheckButton" id="escort_types:vaalor_to_illy"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">6</property><property name="top-attach">7</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">--</property></object><packing><property name="left-attach">6</property><property name="top-attach">6</property></packing></child><child><object class="GtkCheckButton" id="escort_types:zul_to_illy"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">6</property><property name="top-attach">5</property></packing></child><child><object class="GtkCheckButton" id="escort_types:icemule_to_illy"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">6</property><property name="top-attach">4</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:solhaven_to_illy"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">6</property><property name="top-attach">3</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Ta\'llistim</property>
      </object><packing><property name="left-attach">6</property><property name="top-attach">1</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">--</property></object><packing><property name="left-attach">7</property><property name="top-attach">7</property></packing></child><child><object class="GtkCheckButton" id="escort_types:illy_to_vaalor"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">7</property><property name="top-attach">6</property></packing></child><child><object class="GtkCheckButton" id="escort_types:zul_to_vaalor"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">7</property><property name="top-attach">5</property>
      </packing></child><child><object class="GtkCheckButton" id="escort_types:icemule_to_vaalor"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">7</property><property name="top-attach">4</property></packing></child><child><object class="GtkCheckButton" id="escort_types:solhaven_to_vaalor"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">7</property><property name="top-attach">3</property></packing></child><child><object class="GtkCheckButton" id="escort_types:landing_to_vaalor"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">7</property><property name="top-attach">2</property>
      </packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="label" translatable="yes">Ta\'Vaalor</property></object><packing><property name="left-attach">7</property><property name="top-attach">1</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property></object><packing><property name="left-attach">8</property><property name="top-attach">1</property>
      </packing></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/></child><child><placeholder/>
      </child><child><placeholder/></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Travel Preferances</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">0</property></packing></child></object></child></object></child></object><packing><property name="position">1</property>
      </packing></child><child type="tab"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Escort</property></object><packing><property name="position">1</property><property name="tab-fill">False</property></packing></child><child><object class="GtkScrolledWindow"><property name="visible">True</property><property name="can-focus">True</property><property name="shadow-type">in</property><child><object class="GtkViewport"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkBox"><property name="visible">True</property><property name="can-focus">False</property><property name="orientation">vertical</property><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=3 n-rows=2 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="row-spacing">2</property><property name="column-spacing">5</property><child><object class="GtkButton" id="creature_exclude_add"><property name="label" translatable="yes">Add</property><property name="width-request">80</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">start</property><property name="margin-start">5</property><property name="margin-bottom">5</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkButton" id="creature_exclude_delete"><property name="label" translatable="yes">Delete</property><property name="width-request">80</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">end</property><property name="margin-end">5</property><property name="margin-bottom">5</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">0</property></packing></child><child><object class="GtkEntry" id="creature_exclude_entry"><property name="width-request">218</property><property name="visible">True</property><property name="can-focus">True</property><property name="halign">start</property><property name="margin-bottom">5</property><property name="hexpand">True</property><property name="placeholder-text" translatable="yes">Creatures you don\'t want bounties for</property>
      </object><packing><property name="left-attach">1</property><property name="top-attach">0</property></packing></child><child><object class="GtkScrolledWindow"><property name="height-request">80</property><property name="visible">True</property><property name="can-focus">True</property><property name="hexpand">True</property><property name="border-width">5</property><property name="shadow-type">in</property><child><object class="GtkViewport"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkTreeView" id="creature_exclude"><property name="visible">True</property><property name="can-focus">True</property><property name="model">creature_exclude_store</property><property name="headers-visible">False</property><property name="search-column">0</property><property name="fixed-height-mode">True</property><child internal-child="selection"><object class="GtkTreeSelection"/>
      </child><child><object class="GtkTreeViewColumn"><property name="sizing">fixed</property><property name="title" translatable="yes">Exclusion</property><child><object class="GtkCellRendererText"/><attributes><attribute name="text">0</attribute></attributes></child></object></child></object></child></object></child></object><packing><property name="left-attach">0</property><property name="top-attach">1</property><property name="width">3</property></packing></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Exclusions should be entered one line at a time. Regular expressions are supported.

      </property><property name="label" translatable="yes">Creature Exclusions (?)</property>
      </object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">0</property></packing></child><child><object class="GtkFrame"><property name="visible">True</property><property name="can-focus">False</property><property name="border-width">10</property><property name="label-xalign">0</property><child><!-- n-columns=3 n-rows=25 --><object class="GtkGrid"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkComboBoxText" id="default_profile"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="hexpand">True</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="default_name"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">2</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="margin-end">10</property><property name="margin-bottom">5</property><property name="label" translatable="yes">Gem/Default  Profile</property></object><packing><property name="left-attach">0</property><property name="top-attach">2</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">1</property><property name="width">3</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="tooltip-text" translatable="yes">Names should be seperated by commas.</property><property name="margin-top">5</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Creature Names (?)</property><property name="use-markup">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">0</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-top">5</property><property name="margin-bottom">10</property><property name="label" translatable="yes">Associated Profile</property></object><packing><property name="left-attach">1</property><property name="top-attach">0</property></packing></child><child><object class="GtkEntry" id="names_a"><property name="width-request">250</property><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">6</property></packing></child><child><object class="GtkComboBoxText" id="profile_a"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_a"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">6</property></packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">3</property><property name="width">3</property></packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">7</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_b"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_b"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">8</property></packing></child><child><object class="GtkEntry" id="names_b"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">8</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">9</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_c"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_c"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">10</property></packing></child><child><object class="GtkEntry" id="names_c"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">10</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">11</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_d"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_d"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">12</property></packing></child><child><object class="GtkEntry" id="names_d"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">12</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">13</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_e"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_e"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">14</property></packing></child><child><object class="GtkEntry" id="names_e"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">14</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">15</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_f"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_f"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">16</property></packing></child><child><object class="GtkEntry" id="names_f"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">16</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">17</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_g"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_g"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">18</property></packing></child><child><object class="GtkEntry" id="names_g"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">18</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">19</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_h"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_h"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">20</property></packing></child><child><object class="GtkEntry" id="names_h"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">20</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">21</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_i"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_i"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">22</property></packing></child><child><object class="GtkEntry" id="names_i"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">22</property>
      </packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">23</property><property name="width">3</property></packing></child><child><object class="GtkComboBoxText" id="profile_j"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_j"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">24</property></packing></child><child><object class="GtkEntry" id="names_j"><property name="visible">True</property><property name="can-focus">True</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="xalign">0.5</property></object><packing><property name="left-attach">0</property><property name="top-attach">24</property>
      </packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="valign">center</property><property name="margin-end">5</property><property name="label" translatable="yes">Only Kill Bounty 
            Creatures
      </property></object><packing><property name="left-attach">2</property><property name="top-attach">0</property></packing></child><child><object class="GtkCheckButton" id="kill_a"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">6</property></packing></child><child><object class="GtkCheckButton" id="kill_b"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">8</property>
      </packing></child><child><object class="GtkCheckButton" id="kill_c"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">10</property></packing></child><child><object class="GtkCheckButton" id="kill_d"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">12</property></packing></child><child><object class="GtkCheckButton" id="kill_e"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">14</property>
      </packing></child><child><object class="GtkCheckButton" id="kill_f"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">16</property></packing></child><child><object class="GtkCheckButton" id="kill_g"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">18</property></packing></child><child><object class="GtkCheckButton" id="kill_h"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">20</property>
      </packing></child><child><object class="GtkCheckButton" id="kill_i"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">22</property></packing></child><child><object class="GtkCheckButton" id="kill_j"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property>
      </object><packing><property name="left-attach">2</property><property name="top-attach">24</property></packing></child><child><object class="GtkSeparator"><property name="visible">True</property><property name="can-focus">False</property><property name="hexpand">True</property></object><packing><property name="left-attach">0</property><property name="top-attach">5</property><property name="width">3</property></packing></child><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="halign">center</property><property name="margin-end">10</property><property name="margin-bottom">5</property><property name="label" translatable="yes">Bandits Profile</property>
      </object><packing><property name="left-attach">0</property><property name="top-attach">4</property></packing></child><child><object class="GtkComboBoxText" id="bandits_profile"><property name="visible">True</property><property name="can-focus">False</property><property name="valign">center</property><property name="margin-start">10</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="hexpand">True</property><property name="has-entry">True</property><child internal-child="entry"><object class="GtkEntry" id="profile_name_bandits"><property name="can-focus">True</property>
      </object></child></object><packing><property name="left-attach">1</property><property name="top-attach">4</property></packing></child><child><object class="GtkCheckButton" id="kill_bandits"><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">False</property><property name="halign">center</property><property name="valign">center</property><property name="draw-indicator">True</property></object><packing><property name="left-attach">2</property><property name="top-attach">4</property>
      </packing></child><child><placeholder/></child></object></child><child type="label"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Profiles</property></object></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">1</property></packing></child></object></child></object></child></object><packing><property name="position">2</property>
      </packing></child><child type="tab"><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="label" translatable="yes">Profiles</property></object><packing><property name="position">2</property><property name="tab-fill">False</property></packing></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">0</property></packing></child><child><object class="GtkBox"><property name="visible">True</property><property name="can-focus">False</property><child><object class="GtkLabel"><property name="visible">True</property><property name="can-focus">False</property><property name="margin-start">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="label" translatable="yes">Your changes are saved automatically.</property><attributes><attribute name="style" value="italic"/>
      </attributes></object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">0</property></packing></child><child><object class="GtkButton"><property name="label" translatable="yes">Close</property><property name="width-request">80</property><property name="visible">True</property><property name="can-focus">True</property><property name="receives-default">True</property><property name="halign">end</property><property name="margin-end">10</property><property name="margin-top">5</property><property name="margin-bottom">5</property><property name="hexpand">True</property><signal name="clicked" handler="on_close_clicked" swapped="no"/>
      </object><packing><property name="expand">False</property><property name="fill">True</property><property name="position">1</property></packing></child></object><packing><property name="expand">False</property><property name="fill">True</property><property name="pack-type">end</property><property name="position">2</property></packing></child></object></child></object></interface>'
                     
    end
    
    # This is connected to automatically during load_settings and syncs data back to CharSettings.
    def on_update(obj)
      Gtk.queue do
        key = obj.builder_name.to_sym
        setting = Setup.get_setting(key)
        return if setting.nil?

        if obj.class == Gtk::CheckButton
          @settings[key] = obj.active?
        elsif obj.class == Gtk::Entry
          @settings[key] = obj.text.strip
        elsif obj.class == Gtk::SpinButton
          # update from text entry
          obj.update

          # force int, we don't use floats anywhere
          @settings[key] = obj.adjustment.value.to_i
        elsif obj.class == Gtk::ComboBoxText
          @settings[key] = obj.active_text
        end
      end
    end

    def on_close_clicked
      EBounty.save_profile()
      self['main'].destroy
    end

    def on_destroy
      Gtk.queue { @running = false }
    end

    def on_drop_load(profile_name) 

        dir = "#{$data_dir}#{XMLData.game}/#{Char.name}/bigshot_profiles"   
    
        self[profile_name].remove_all
        self[profile_name].append_text('')
        names = []
        Dir.foreach(dir){|f| names.push(f)} 
        names.each{ |filename|
          next if filename == '.' || filename == '..' || filename =~ /.ini/              
          self[profile_name].append_text("#{filename.sub(".yaml", "")}")
        }     
    end

    # iterate all objects and for any that match a setting name directly we set the default
    def load_settings
      Gtk.queue do
        # load up the generic settings which are just matching by name of the widget
        objects.each do |obj|
          next unless obj.methods.include?(:builder_name)

          key = obj.builder_name.to_sym
          next if (setting = Setup.get_setting(key)).nil?

          # set the default value
          if obj.class == Gtk::CheckButton
            obj.active = @settings[key]
            obj.signal_connect('toggled') { on_update(obj) }
          elsif obj.class == Gtk::Entry
            obj.text = @settings[key].strip
                      
            if obj.builder_name.to_s == "default_name"
              obj.text = @settings[:default_profile]
            elsif obj.builder_name.to_s == "profile_name_bandits"
              obj.text = @settings[:bandits_profile]
            elsif obj.builder_name.to_s == "profile_name_a"
              obj.text = @settings[:profile_a]
            elsif obj.builder_name.to_s == "profile_name_b"
              obj.text = @settings[:profile_b]  
            elsif obj.builder_name.to_s == "profile_name_c"
              obj.text = @settings[:profile_c]  
            elsif obj.builder_name.to_s == "profile_name_d"
              obj.text = @settings[:profile_d]  
            elsif obj.builder_name.to_s == "profile_name_e"
              obj.text = @settings[:profile_e]  
            elsif obj.builder_name.to_s == "profile_name_f"
              obj.text = @settings[:profile_f]  
            elsif obj.builder_name.to_s == "profile_name_g"
              obj.text = @settings[:profile_g]  
            elsif obj.builder_name.to_s == "profile_name_h"
              obj.text = @settings[:profile_h]  
            elsif obj.builder_name.to_s == "profile_name_i"
              obj.text = @settings[:profile_i]  
            elsif obj.builder_name.to_s == "profile_name_j"
              obj.text = @settings[:profile_j]
            end
          
            obj.signal_connect('changed') { on_update(obj) }
          elsif obj.class == Gtk::SpinButton
            obj.value = @settings[key]
            obj.adjustment.value = @settings[key]
            obj.signal_connect('changed') { on_update(obj) }
          elsif obj.class == Gtk::ComboBoxText 
              on_drop_load(obj.builder_name.to_s)  
            obj.signal_connect('changed') { on_update(obj) }
          elsif obj.class == Gtk::TreeView
            if (store = self["#{key}_store"]).nil?
              respond "** failed to find store for treeview #{key}"
              next
            elsif setting[:load].nil?
              respond "** no :load defined #{key}"
              next
            end

            setting[:load].call(store, @settings[key])

            # setup the signals
            if (add = self["#{key}_add"]).nil?
              respond "** failed to find add for treeview #{key}"
              next
            elsif (delete = self["#{key}_delete"]).nil?
              respond "** failed to find delete for treeview #{key}"
              next
            elsif (entry = self["#{key}_entry"]).nil?
              respond "** failed to find entry for treeview #{key}"
              next
            end

            add.signal_connect('clicked') do
              if setting[:set].nil?
                respond "** no :set defined for #{key}"
                next
              elsif entry.text.empty?
                next
              end
              setting[:set].call(store, entry.text, @settings[key])
              setting[:load].call(store, @settings[key])
            end

            delete.signal_connect('clicked') do
              if setting[:delete].nil?
                respond "** no :delete defined for #{key}"
                next
              elsif (selected = obj.selection.selected).nil?
                next
              end
              setting[:delete].call(store, selected, @settings[key])
              setting[:load].call(store, @settings[key])
            end
          end
        end

        # checkboxes for array storage with id's <setting>:<value>
        # this is primarily used by the loot types
        objects.each do |obj|
          next unless obj.methods.include?(:builder_name)
          next unless obj.builder_name =~ /^([^:]+):(.*)$/i
          next unless obj.class == Gtk::CheckButton

          key = Regexp.last_match(1).to_sym
          value = Regexp.last_match(2).to_s
          next if Setup.get_setting(key).nil?

          obj.active = @settings[key].include?(value)

          # add in hook
          obj.signal_connect('toggled') do
            @settings[key].delete(value)
            if obj.active?
              @settings[key].push(value)
              @settings[key].uniq!.sort!
            end
          end
        end
      end
    end

    def start
      @running = true

      Gtk.queue { self['main'].show_all }

      wait_while { @running }
    end

    def list(cat_to_list: 'all')
      indent_size = 2
      print_array =
        proc do |key, value, indent|
          _respond("#{' ' * indent_size * indent.to_i}#{key}:")
          value.sort!.each { |entry| _respond("#{' ' * indent_size * (indent.to_i + 1)}#{value.index(entry) + 1}. #{entry}") }
        end

      print_value = proc { |key, value, indent| _respond("#{' ' * indent_size * indent.to_i}#{key}: #{value}") }

      categories = cat_to_list == 'all' ? %w[loot sell skin internal] : [cat_to_list]
      if $frontend == 'stormfront'
        output = "<output class=\"mono\"/>\n"
      else
        output = String.new
      end
      categories.each do |opt|
        _respond("#{output}") if !output.empty?
        _respond("#{monsterbold_start}= #{opt.capitalize} =#{monsterbold_end}\n")
        @@categories[opt.to_sym].each do |id, _|
          value = @settings[id]
          value.class == Array ? print_array.call(id, value, 1) : print_value.call(id, value, 1)
        end
      end
      if $frontend == 'stormfront'
        output = "<output class=\"\"/>\n"
        _respond("#{output}")
      end
    end

    def self.update_setting(key, value)
      setting = Setup.get_setting(key)
      EBounty.msg("error", "** Setting \"#{key}\" does not exist") if setting.nil?

      action = nil

      if value =~ /^([+-])(.*)$/
        action = Regexp.last_match(1)
        value = Regexp.last_match(2).strip.downcase
      end

      if value == 'reset'
        @settings.delete(key)
        EBounty.msg("info", " Reset #{key}")
      elsif @settings[key].class == Array
        if value =~ /\d/ && @settings[key][value.to_i]
          @settings[key].delete_at(value.to_i)
        else
          @settings[key].delete(value)
        end

        if action == '-'
          EBounty.msg("info", " \"#{value}\" removed from \"#{key}\"")
        else
          @settings[key].push(value)
          EBounty.msg("info", " \"#{value}\" added to \"#{key}\"")
        end

        EBounty.msg("info", " \"#{key}\" is now \"#{@settings[key].join(', ')}\"")
      else
        if @settings[key].class == FalseClass || @settings[key].class == TrueClass
          value = value =~ /^true|1|yes|on/ ? true : false
        elsif @settings[key].class == Integer
          value = value.to_i
        end

        EBounty.msg("info", " \"#{key}\" has been set to \"#{value}\"")
        @settings[key] = value
      end
    end
  end

  module Hunting
  
    def self.should_hunt?
      
      if XMLData.injuries.any? { |a,h| h['wound'] > 0 || h['scar'] > 1 } || percenthealth < 95 
        healer = EBounty.data.settings[:healing_script]
        if healer.to_s.empty?
          Script.run('eherbs')   
        else
          Script.run(healer)
        end
      end
      
      if percentmana < UserVars.op['rest_till_mana'].to_i
        EBounty.data.reason = "Mana less than #{UserVars.op['rest_till_mana']}%"
        return false
      end
      
      if !EBounty.data.wait
        return true
      end
      
      if checkbounty =~ /^You are not currently assigned / && !Spell[9003].active?
        return true
      end
      
      #fixme: convert to actual percentage
      if( percentmind() > UserVars.op['rest_till_exp'].to_i)
        EBounty.data.reason = "Mind > #{UserVars.op['rest_till_exp'].to_i}%"
        return false
      elsif( percentmana() < UserVars.op['rest_till_mana'].to_i )
        EBounty.data.reason = "Mana < #{UserVars.op['rest_till_mana'].to_i}%"
        return false
      elsif( checkspirit() < (Stats.aur[0].to_f / 10).round - 1 )
        EBounty.data.reason = "Spirit too low"
        return false
      elsif Stats.enhanced_aur[0].to_i < Stats.aur[0].to_i
        EBounty.data.reason = "Recovering from Death"
        return false
      end      
      return true
    end
  
    def self.set_parameters
    
    
    
    end
  
    def self.go_hunting

      hunt_start = 0
      hunt_end = 0
      converted = nil
      EBounty.data.rest_time = Time.now
     
      original_targets = UserVars.op['targets']
      original_wounded = UserVars.op['wounded_eval']
      original_bounty = UserVars.op['bounty_eval']
      original_fried = UserVars.op['fried']
      original_start = UserVars.op['hunting_room_id']
      original_rally = UserVars.op['rallypoint_room_id']
      original_boundaries = UserVars.op['hunting_boundaries']
     
      before_dying { 
        Script.kill("bigshot") if Script.running?("bigshot")
      
        UserVars.op['targets'] = original_targets
        UserVars.op['wounded_eval'] = original_wounded
        UserVars.op['bounty_eval'] = original_bounty
        UserVars.op['fried'] = original_fried
        UserVars.op['hunting_room_id'] = original_start
        UserVars.op['rallypoint_room_id'] = original_rally
        UserVars.op['hunting_boundaries'] = original_boundaries
      
        profile = "#{EBounty.data.dir}/#{EBounty.data.settings[:default_profile]}.yaml"
        UserVars.op = YAML.load_file(profile)
     
      } 
 
    # Tell bigshot when to stop hunting.
      bounty_eval = "(checkbounty =~ /^You (?:succeeded|have located)|your task is failed/)" # bounty complete
      bounty_eval += " || (checkbounty =~ /^You have made contact with the child/ && GameObj.npcs.any? { |npc| npc.name =~ /\\bchild\\b/ })" # child found
      bounty_eval += " || (checkbounty =~ /^You are not currently assigned / && !Spell[9003].active?)"
      bounty_eval += " || (checkbounty =~ /You have been tasked to retrieve(.*)of at least/ && (j=0;GameObj.inv.each{|i| j += i.contents.count{|l| l.name =~ /#{EBounty.data.skin}/i}.to_i}; j >= EBounty.data.remaining_skins.to_i))"
      bounty_eval += " || (checkbounty =~ /The gem dealer/ && (t=0;GameObj.inv.each{|k| t += k.contents.count{|v| v.name =~ /#{EBounty.data.gem.strip}/i}.to_i}; t>= EBounty.data.remaining_gems.to_i))"

      UserVars.op['bounty_eval'] = bounty_eval          
      
      if (checkbounty =~ /You are not currently assigned a task/ && Spell[9003].active?) || EBounty.data.settings[:exp_pause] 
        UserVars.op['fried'] = "100"
      else     
        UserVars.op['fried'] = "101"
      end
    
      unless EBounty.data.creature.nil?
  
        #See if the target list is full name?
        if UserVars.op['targets'].include?(EBounty.data.creature)
          target = EBounty.data.creature
        else
          target = EBounty.data.creature.split.last
        end
    
        result = nil
        result = UserVars.op['targets'].match(/#{target}\([a-j]\)/)
        new_target = result.nil? ? "(?:grizzled|ancient)?\\s?.*?#{EBounty.data.creature}" : "(?:grizzled|ancient)?\\s?.*?#{result}"
       
        if EBounty.data.settings[:only_required_creatures] && !EBounty.data.creature.nil? 
          if EBounty.data.creature == "bandits"
            UserVars.op['targets'] = "(?:thief|rogue|bandit|mugger|outlaw|highwayman|marauder|brigand|thug|robber)"
            UserVars.op['hunting_room_id'] = UserVars.op['rallypoint_room_id'] = EBounty.data.bandit_start         
            UserVars.op['hunting_boundaries'] = EBounty.data.bandit_boundaries
          else
            UserVars.op['targets'] = new_target
          end         
        elsif !EBounty.data.settings[:only_required_creatures] && !EBounty.data.creature.nil? && EBounty.data.creature != "bandits" 
          UserVars.op['targets'] += ",#{new_target}"
        elsif !EBounty.data.settings[:only_required_creatures] && !EBounty.data.creature.nil? && EBounty.data.creature == "bandits" 
          UserVars.op['targets'] = "(?:.*)"
          UserVars.op['hunting_room_id'] = UserVars.op['rallypoint_room_id'] = EBounty.data.bandit_start         
          UserVars.op['hunting_boundaries'] = EBounty.data.bandit_boundaries
        end
  
      end
  
      until checkbounty =~ /succeeded in your task|You have made contact with the child you are to rescue|You have located/i || (checkbounty =~ /You are not currently assigned a task/ && !Effects::Cooldowns.active?("Next Bounty"))
 
        if checkbounty =~ /You have been tasked to retrieve (\d+) (.*?)(?:s)? of at least/
          EBounty.data.remaining_skins = $1.to_i + 1
        elsif checkbounty =~ /You have been tasked to retrieve (\d+) (?:more of|of) them/
          EBounty.data.remaining_gems = $1.to_i
        end
        
        break if checkbounty =~ /succeeded in your task /
         
        EBounty.go2_rest unless !EBounty.data.wait
         
        until(Hunting.should_hunt?)
        
				  EBounty.go2_rest
          
          if XMLData.injuries.any? { |a,h| h['wound'] > 0 || h['scar'] > 1 } || percenthealth < 95 
            healer = EBounty.data.settings[:healing_script]
            if healer.to_s.empty?
              Script.run('eherbs')   
            else
              Script.run(healer)
            end
          end
                        
          if EBounty.data.rest_time < Time.now
   
            if hunt_start != 0
              respond ""
              EBounty.msg("yellow", "Last Hunt: #{converted}")
            end
            
            respond ""
            EBounty.msg("yellow", "Not Hunting: #{EBounty.data.reason}")
            respond ""
 
            #Fixme: self_buffs
           
            EBounty.data.rest_time = Time.now + 60 
          end
          sleep 0.5
        end
      
        break if checkbounty =~ /^You are not currently assigned / && !Spell[9003].active?
      
        hunt_start = Process.clock_gettime(Process::CLOCK_MONOTONIC)
        Script.run('bigshot','bounty') 
        hunt_end = Process.clock_gettime(Process::CLOCK_MONOTONIC)
        elapsed = hunt_end - hunt_start
        converted = Time.at(elapsed).utc.strftime("%H:%M:%S")
        
        #End at the bigshot resting spot so we stay in the same town
        unless GameObj.npcs.find { |n| n.name =~ /child/i }
          #We stopped for a reason so head back to town and sell and heal if needed
          EBounty.go2(EBounty.data.settings[:resting_room])
        
          UserVars.op['resting_commands'].split(",").each { |i|
            fput(i)
            sleep(0.3)
          }

          EBounty.run_scripts(UserVars.op['resting_scripts'])
                   
          Task.prep unless checkbounty =~ /succeeded in your task/   
        end
      end
      
      UserVars.op['targets'] = original_targets
      UserVars.op['wounded_eval'] = original_wounded
      UserVars.op['bounty_eval'] = original_bounty
      UserVars.op['fried'] = original_fried
      UserVars.op['hunting_room_id'] = original_start
      UserVars.op['rallypoint_room_id'] = original_rally
      UserVars.op['hunting_boundaries'] = original_boundaries
       
    end
  
  end

  module Task
    
    def self.bounty_check
    
      EBounty.data.creature = nil
    
      bounty_regex = Regexp.union(
        /It appears they have a creature problem they'd like you to solve./,
        /It appears they have a bandit problem they'd like you to solve./,
        /It appears that a local resident urgently needs our help in some matter.  Go report to .* to find out more./,
        /It appears they need your help in tracking down some kind of lost heirloom.  Go report to .* to find out more./
      )
      
            
      EBounty.msg("debug","bounty_check: #{checkbounty}")
  
      #bounty status
      if (checkbounty =~ /You are not currently assigned a task./i )
        EBounty.msg("debug","no_bounty")
        Effects::Cooldowns.active?("Next Bounty") ? Task.wait_for_bounty : Task.bounty_get
      elsif (checkbounty =~ /You have succeeded in your task and can return to the Adventurer's Guild to receive your reward./i )
        Task.bounty_complete
      elsif (checkbounty =~ /You succeeded in your task and should report back to/i )
        Task.ask_guard
        Task.bounty_check
      #get bounty ...
      elsif (checkbounty =~ bounty_regex) 
        if Task.bounty_keep
          Task.ask_guard
        else
          Task.bounty_remove
        end
        Task.bounty_check
      elsif (checkbounty =~ /The local healer, .*?, has asked for our aid./)
        if Task.bounty_keep
          Task.forage_ask
        else
          Task.bounty_remove
        end
        Task.bounty_check
      elsif (checkbounty =~ /The local gem dealer, .*?, has an order to fill and wants our help./)
        if Task.bounty_keep
          Task.gem_ask
        else
          Task.bounty_remove
        end
        Task.bounty_check
      elsif (checkbounty =~ /The local furrier .*? has an order to fill and wants our help./)
        if Task.bounty_keep
          Task.skin_ask
        else
          Task.bounty_remove
        end
        Task.bounty_check
      
      #child bounty
      elsif (checkbounty =~ /A local divinist has had visions of the child fleeing from an? ((?:\w+|\s|'){1,5}) (?:in|on|near) (?:(.*) (?:under|near|between) )?([^.]+)\.  Find the area/i )
        exit if EBounty.data.settings[:basic]
        Task.child_bounty($1,$2)
      
      #bandit/creature bounty	
      elsif (checkbounty =~ /You have been tasked to suppress bandit activity (?:in|on|near) (?:(.*) (?:under|near|between) )?([^.]+)\./ )
        Task.bandit_bounty($1)
      #creature tasks
      elsif (checkbounty =~ /You have been tasked to hunt down and kill a particularly dangerous (.*) that has established a territory (?:in|on|near) (?:(.*) (?:under|near|between) )?([^.]+)\./i )
        location = $2.nil? ? $3 : $2
        Task.creature_culling($1,location,"grizzled")
      elsif checkbounty =~ /You have been tasked to suppress (.*) activity (?:in|on|near) (?:(.*) (?:under|near|between) )?([^.]+)\.  You need to kill (\d+) (?:more )?of them to complete your task\./i
        Task.creature_culling($1, $2, "herd")
      #forage bounty
      elsif (checkbounty =~ /The .* in ([^,]+), [^,]+, is working on a concoction that requires (?:a|an|some) (.*) found (?:in|on|near) (?:(.*) (?:under|near|between)) ?([^.]+)\..*You have been tasked to retrieve (\d+)/i )
        exit if EBounty.data.settings[:basic]
        Task.forage_bounty($2,$3,$5)      
      #gem bounty
      elsif (checkbounty =~ /The gem dealer in .*, .*, has received orders from multiple customers requesting (.*).  You have been tasked to retrieve (\d+) (?:more of|of) them.  You can SELL them to the gem dealer as you find them./i )
        exit if EBounty.data.settings[:basic]
        Task.gem_bounty($1,$2)      
      #skin bounty  
      elsif (checkbounty =~ /You have been tasked to retrieve (\d+) (.*?)(?:s)? of at least \w+ quality for .*? in .*?.  You can SKIN them off the corpse of (?:a|an) (.*?) or purchase them from another adventurer./i )
        Task.skin_bounty($3,$2,$1)     
      #heirloom bounty
      elsif (checkbounty =~ /You have been tasked to recover (?:an?|some) (.*) that an unfortunate citizen lost after being attacked by an? ((?:\w+|\s|'|-){1,7}) (?:in|on|near) (?:(.*) (?:under|near|between) )?([^.]+)\.  .*(SEARCH|LOOT)/i )
        Task.heirloom_bounty($1, $2, $3, $5)
      #escort bounty
      elsif (checkbounty =~ /client has hired us to provide a protective escort .* Go to the (.*?) and WAIT .* guarantee .*? safety to (.*?) as soon as you can/i)
        Task.escort($1,$2)
      elsif (checkbounty =~ /You have located (?:a |an )?(.*?) and should bring it back/i )
        item = $1
        obj = EBounty.data.sacks["default"].contents.find { |i| i.name =~ /#{item}/ }
        fput "get ##{obj.id}"
        Task.ask_guard
        Task.bounty_check
      elsif (checkbounty =~ /You have failed in your task|The child you were tasked to rescue is gone and your task is failed/i)
        Task.task_failed
        Task.bounty_check
      #no match
      else
        EBounty.msg("warn", "Unknown Result: Unable to match bounty_check.")
        EBounty.msg("warn", "checkbounty: #{checkbounty}")
        exit
      end
      
    end
  
    def self.bounty_keep
         
      task = {
        /It appears they have a creature problem they'd like you to solve./ => "culling",
        /It appears they have a bandit problem they'd like you to solve./ => "bandits",
        /It appears that a local resident urgently needs our help in some matter.  Go report to .* to find out more./ => "rescue",
        /It appears they need your help in tracking down some kind of lost heirloom.  Go report to .* to find out more./ => "heirloom",
        /The local healer, .*?, has asked for our aid./ => "foraging",
        /The local gem dealer, .*?, has an order to fill and wants our help./ => "gem_collecting",
        /The local furrier .*? has an order to fill and wants our help./ => "skinning",
          
      }
 
      current_task = task.select {|k| k =~ checkbounty}.shift[1]
      if !EBounty.data.settings[:bounty_types].index{|s| s =~ /#{current_task}/}
        return false
      end
      
      return true
      
    end
    
    def self.guard_list
    
      town = Room[Room.current.find_nearest_by_tag("town")]
 
      location_list = []
      Room.list.find_all do |r|
        location_list.push(r.id) if r.tags.any? { |tag| tag =~ /advguard/} && !r.tags.to_s.empty? &&  Room[r.find_nearest_by_tag("town")].location == town.location
      end

      places = []
      location_list.each{ |room|
        next if town.path_to(room).nil?
        travel = Map.estimate_time(town.path_to(room))
        places.push(room) if travel < 5 
      }
 
      where_is_previous_var, where_is_shortest_distances_var = Room[Room.current.find_nearest_by_tag('advguard')].dijkstra
      starters = [Room.current.find_nearest_by_tag('advguard')]
      places = places - starters
      places = places.uniq.sort { |a,b| where_is_shortest_distances_var[a] <=> where_is_shortest_distances_var[b] }
      places = starters + places
      
      EBounty.msg("debug","guard_list places: #{places}")
      
      return places
      
    end
    
    def self.ask_guard
      
      location_list = Task.guard_list
      original_checkbounty = checkbounty
      guards = []
      
      if XMLData.injuries.any? { |a,h| h['wound'] > 0 || h['scar'] > 1 } || percenthealth < 95 
        healer = EBounty.data.settings[:healing_script]
        if healer.to_s.empty?
          Script.run('eherbs')   
        else
          Script.run(healer)
        end
      end
      
      location_list.each{ |room|
      
        EBounty.go2(room)
        
        if Room.current.location =~ /the town of River's Rest/
          guards.push("purser") 
        else 
         guards = GameObj.npcs.find_all{ |npc| npc.name =~ /(?:guard|sergeant|guardsman|sentry|tavernkeeper)/i }
        end
        
        loop{
          if Room.current.uid !~ /7503252|7503251/
            break
          elsif !guards.length.positive?
            move checkpaths[0]
            guards = GameObj.npcs.find_all{ |npc| npc.name =~ /(?:guard|sergeant|guardsman|sentry|tavernkeeper)/i }
            break if guards.length.positive?
            echo "Looking for the lousy tavernkeeper"
            sleep 30
            next
          end  
        }
        
        got_response = false
        guards.each{ |guard|
          result = dothistimeout "ask #{guard} about bounty", 3, EBounty.data.guard_regex
          unless result =~ /I don't have any tasks for you right now/
            got_response = true
            break
          end       
        }
        
        break if got_response
            
      }
      
      sleep 0.2 until checkbounty != original_checkbounty
        
    end
   
    def self.bandit_location(location)
     
      badlist = [37,38,39,40,41] # bad Whistler's Pass rooms.
      badlist = @badlist + [30609, 30610, 30611, 30613, 30614, 30615, 30616, 30617, 30618, 30619, 30811, 30817] # bad Widowmaker's Road
      
      boundary_list = []
      location_list = []
      
      Room.list.find_all{ |r|
        if !r.location.to_s.empty? && location =~ /#{r.location}/i && !badlist.include?(r.id)
          location_list.push(r.id) 
        end
      }
 
     where_is_previous_var, where_is_shortest_distances_var = Room.current.dijkstra
     shortest_path = location_list.uniq.sort { |a,b| where_is_shortest_distances_var[a] <=> where_is_shortest_distances_var[b] }
     
     EBounty.msg("debug","Bandits: location_list - #{location_list}")
     location_list.each{ |id| 
      
      Room[id].wayto.keys.each{ |room|
        next if location_list.include?(room.to_i)
        boundary_list.push(room.to_s)
      }
     }
     EBounty.msg("debug","Bandits: boundary_list - #{boundary_list}")
     EBounty.data.bandit_start = shortest_path.first.to_s
     EBounty.data.bandit_boundaries = boundary_list.join(", ")
  
    end
  
    def self.bandit_bounty(location)
      EBounty.msg("debug","bandit_bounty | location: #{location}")
    
      if EBounty.data.settings[:bounty_types].include?("kill_bandits")
        EBounty.data.wait = false
        EBounty.switch_profile("bandits",location)
        Task.bandit_location(location)
        Hunting.go_hunting       
        Task.bounty_check
      else
        Task.bounty_remove
      end  
    end
  
    def self.bounty_complete     
      EBounty.msg("debug","bounty_complete")
      
      original_checkbounty = checkbounty
      
      unless EBounty.data.settings[:basic]
        #Make sure the default profile is loaded
        profile = "#{EBounty.data.dir}/#{EBounty.data.settings[:default_profile]}.yaml"
        UserVars.op = YAML.load_file(profile)
      end
      
      if checkmind == "saturated"
        exit if EBounty.data.settings[:basic] || EBounty.data.settings[:once_and_done]
        Task.prep
        EBounty.go2_rest 
      end
            
      #Hang out until not satuarated
      until checkmind != "saturated"
        exit if (EBounty.data.settings[:basic] || EBounty.data.settings[:once_and_done])
        sleep 0.5
        #fput EBounty.data.rest_options.sample					
        #Fixme: self_buffs    
      end
    
      #Go over to the adventure guild
      if !EBounty.data.settings[:resting_room].to_s.empty? && XMLData.game != "GSF"
        advguild_id = Room[EBounty.data.settings[:resting_room]].find_nearest_by_tag("advguild")
      else
        advguild_id = Room.current.find_nearest_by_tag("advguild")
      end
      EBounty.go2(advguild_id)
      
      #Turn in the bounty - Fixme: dothistimeout
     
      npc = GameObj.npcs.find{ |npc| npc.name =~ /(?:taskmaster|Halfwhistle)/i }
      fput "ask #{npc} about bounty"
      
      sleep 0.2 until checkbounty != original_checkbounty
   
      exit if EBounty.data.settings[:once_and_done]
      Task.prep unless EBounty.data.settings[:basic] 
      
      #Reset waiting flag for hunting
      EBounty.data.wait = true
      
      if Effects::Cooldowns.active?("Next Bounty")
        exit if EBounty.data.settings[:basic]      
        Hunting.go_hunting
      end
      
      #Lets get a bounty
      Task.bounty_check
             
    end
  
    def self.bounty_get   
      EBounty.msg("debug","bounty_get")
   
      if !EBounty.data.settings[:resting_room].to_s.empty? && XMLData.game != "GSF" 
        advguild_id = Room[EBounty.data.settings[:resting_room]].find_nearest_by_tag("advguild")
      else
        advguild_id = Room.current.find_nearest_by_tag("advguild")
      end
      
      EBounty.go2(advguild_id)
      
      npc = GameObj.npcs.find{ |npc| npc.name =~ /(?:taskmaster|Halfwhistle)/i }
      res = dothistimeout "ask #{npc} about bounty", 3, Regexp.union(
        /The local gem dealer, .*, has an order to fill and wants our help./,
        /The local furrier .* has an order to fill and wants our help./,
        /It appears they have a .* problem they'd like you to solve./,
        /It appears that a local resident urgently needs our help in some matter.  Go report to .* to find out more./,
        /The local healer, .*, has asked for our aid./,
        /You have already been assigned a task, \w+./,
        /It appears they need your help in tracking down some kind of lost heirloom.  Go report to .* to find out more./,
        /Come back in about .* (?:minute|minutes) if you want another task./
        )
      
      sleep 2
      
      Task.bounty_check
    end
    
    def self.bounty_remove(just_remove = false)
      EBounty.msg("debug","bounty_remove")

      EBounty.go2("advguild")
      npc = GameObj.npcs.find{ |npc| npc.name =~ /(?:taskmaster|Halfwhistle)/i }
      until checkbounty =~ /You are not currently assigned a task/
        fput "ask #{npc} about removal"
        EBounty.wait_rt
      end
      
      return if just_remove
          
      if EBounty.data.settings[:use_vouchers]       
        fput "ask ##{npc.id} about expediting"
        EBounty.wait_rt
      end

      Task.bounty_check
    end
     
    def self.child_bounty(critter, location)
      EBounty.msg("debug","child_bounty | critter: #{critter} location: #{location}")
      exit if EBounty.data.settings[:basic]
      
      if EBounty.data.settings[:bounty_types].include?("rescue")
      
        if running? "child-bigshot"
          kill_script ("child-bigshot")
          before_dying { Script.start('child-bigshot') }
        end  
      
        EBounty.data.wait = false
        EBounty.switch_profile(critter, location)        
        Hunting.go_hunting       
        Script.run('echild') 
        sleep 2
        kill_script("go2") if running?("go2")
        
        UserVars.op['resting_commands'].split(",").each { |i|
          fput(i)
          sleep(0.3)
        }

        EBounty.run_scripts(UserVars.op['resting_scripts'])
        
        Task.bounty_check
      else
        Task.bounty_remove
      end       
    end
        
    def self.creature_culling(critter, location, type)
      EBounty.msg("debug","creature_culling | critter: #{critter} location: #{location} type: #{type}")
    
      if (EBounty.data.settings[:bounty_types].include?("culling") && type == "herd") || (EBounty.data.settings[:bounty_types].include?("boss_culling") && type == "grizzled")
        EBounty.data.wait = false
        EBounty.switch_profile(critter, location)          
        Hunting.go_hunting       
        Task.bounty_check
      else
        Task.bounty_remove
      end  
    end
    
    def self.escort(pickup, dropoff)
      EBounty.msg("debug","escort | pickup: #{pickup} dropoff: #{dropoff}")
      
  
      escort_pickup = {
        "area just inside the Sapphire Gate"                   => "illy",
        "area just inside the North Gate"                      => "landing",
        "south end of North Market"                            => "solhaven",
        "area just north of the South Gate, past the barbican" => "icemule",
        "Kresh'ar Deep monument"                               => "zul",
        "area just inside the Amaranth Gate"                   => "vaalor",
      }
      
      escort_dropoff = {
        "Wehnimer's Landing" => "landing",
        "Icemule Trace"      => "icemule",
        "Zul Logoth"         => "zul",
        "Solhaven"           => "solhaven",
        "Ta'Vaalor"          => "vaalor",
        "Ta'Illistim"        => "illy",
      }
      
      composite = "#{escort_pickup[pickup]}_to_#{escort_dropoff[dropoff]}"
 
      if EBounty.data.settings[:escort_types].include?(composite) && EBounty.data.settings[:bounty_types].include?("escort")
        #Fixme - script checks needed
        exit if EBounty.data.settings[:basic]
        Script.run('ego2')
        sleep 2
        Task.bounty_check
      else
        Task.bounty_remove
      end       

    end
    
    def self.forage_ask
      EBounty.msg("debug","forage_ask")
      
      if EBounty.data.settings[:bounty_types].include?("foraging")    
        room = Room[EBounty.data.settings[:resting_room]].find_nearest(EBounty.data.herbalist_rooms)        
        EBounty.go2(room)       
        if Room.current.id == 10396
          herbalist = "maraene"
        else
          #herbalist = GameObj.npcs.first.noun
          herbalist = GameObj.npcs.find { |t| t.name =~ /brother Barnstel|scarred Agarnil kris|healer|herbalist|merchant Kelph|famed baker Leaftoe|Akrash|old Mistress Lomara|Libram Greenleaf|Sparkfinger/i }.noun
        end     
        dothistimeout("ask #{herbalist} about bounty", 5, /Yes, I do have a task for you/)
        exit if EBounty.data.settings[:basic]
        sleep 2       
      else
        Task.bounty_remove
      end    
    end
    
    def self.forage_bounty(herb,location,quantity)
      EBounty.msg("debug","forage_bounty: herb - #{herb} location - #{location} quantity - #{quantity}")

      herb = herb.gsub(/^some /, "")
 
      herb = 'ayana leaf' if herb =~ /ayana (weed|lichen|berry|root)/
      herb = "ayana'al leaf" if herb =~ /ayana'al (weed|lichen|berry|root)/
 
      herbs = EBounty.data.sacks["default"].contents.find_all { |i| herb.end_with? i.noun || (herb.start_with? i.name && herb =~ /ayana/) }

      if herbs.length.positive? 
        Task.forage_return
        Task.bounty_check
        return
      end

      location_list = []
      Room.list.find_all do |r|
        if r.tags.any? { |tag| herb.end_with? tag || (herb.start_with? tag && herb =~ /ayana/)} && !r.location.nil? && location =~ /#{r.location}/i 
          location_list.push(r.id)
        end
      end
      
      unless location_list.length.positive?
        echo "No #{herb} found at #{location}"
        exit
      end
      #Make sure we are searching for the right thing
      forage_item = nil
      Room[location_list.first].tags.each { |tag|
        if herb.end_with? tag || (herb.start_with? tag && herb =~ /ayana/)
          forage_item = tag
        end
      }
 
      UserVars.op['hunting_prep_commands'].split(",").each { |i|
        fput(i)
        sleep(0.3)
      }

      location_list.each { |room|
        
        EBounty.go2(room)
            
        unless checkpcs || checknpcs
          
          until kneeling?
            fput 'kneel'
            sleep 0.2
          end
          
          #fixme use Lich empty hand
          empty_hand
          
          right_hand = GameObj.right_hand
          left_hand = GameObj.left_hand
          
          loop {       
            Spell[506].cast if Spell[506].known? && Spell[506].affordable? && !Spell[506].active?              
            Spell[604].cast if Spell[604].known? && Spell[604].affordable? && !Spell[604].active?              
         
            forage_result = dothistimeout "forage for #{forage_item}", 10, /^You forage|^You make so much noise that only the dead would not notice you thrashing about in your unsuccessful search\.$|^You stumble about in a fruitless attempt at foraging\.$|you are unable to find anything useful|^As you carefully forage around you (can find no hint|see no evidence) of what you are looking for(?: right now, though you are fairly certain this is where it can be found)?\.|^You begin to forage around when your hand comes into contact with something that stabs you in the finger\.$|^As you forage around you suddenly feel a sharp pain in your right hand!|^You begin to forage around when suddenly you feel a burning sensation in your hand\.$|^You fumble about so badly in your search that you can only hope no one was watching you\.$/
            EBounty.wait_rt
            if forage_result =~ /^You forage briefly and manage to find/
            
              #hands_free() Fixme
              fput "stow left" if GameObj.left_hand.name != "Empty" && GameObj.left_hand != left_hand
              fput "stow right" if GameObj.right_hand.name != "Empty" && GameObj.right_hand != right_hand
 
              break if EBounty.data.sacks["default"].contents.find_all { |i| i.name =~ /#{forage_item}/ }.length >= quantity.to_i
              
             #Fixme: Consolidate damage regex 
            elsif forage_result =~ /^You begin to forage around when your hand comes into contact with something that stabs you in the finger./
              EBounty.wait_rt
              Spell[114].cast if Spell[114].known? and Spell[114].affordable?
            elsif forage_result =~ /^As you forage around you suddenly feel a sharp pain in your right hand|suddenly you feel a burning sensation in your hand/
              EBounty.wait_rt
              Spell[114].cast if Spell[114].known? && Spell[114].affordable?               
            elsif forage_result.nil?  or (forage_result =~ /^As you carefully forage around you (can find no hint|see no evidence) of what you are looking for(?: right now, though you are fairly certain this is where it can be found)?\.|As you forage around, you notice that someone has been foraging here recently and you are unable to find anything useful/)
              break
            end
            
            if XMLData.injuries.any? { |a,h| h['wound'] > 0 || h['scar'] > 1 } || percenthealth < 90 
              return_room = Room.current.id
              EBounty.go2_rest
              Task.prep
              EBounty.go2(return_room)
            end
            
            break if checknpcs
            
          }
                  
          fput 'stand' until standing?
          
          fill_hand
          
          break if EBounty.data.sacks["default"].contents.find_all { |i| i.name =~ /#{forage_item}/ }.length >= quantity.to_i
          
        end
      }
      
      Task.forage_return
      
      Task.bounty_check
   
    end
    
    def self.forage_return
      EBounty.msg("debug","forage_return")
      room = Room[EBounty.data.settings[:resting_room]].find_nearest(EBounty.data.herbalist_rooms)
      EBounty.go2(room)
      
      UserVars.op['resting_commands'].split(",").each { |i|
        fput(i)
        sleep(0.3)
      }

      EBounty.run_scripts(UserVars.op['resting_scripts'])
           
      if Room.current.id == 10396
        herbalist = "maraene"
      else
        herbalist = GameObj.npcs.first.noun
       # herbalist = GameObj.npcs.find { |t| t.name =~ /brother Barnstel|scarred Agarnil kris|healer|herbalist|merchant Kelph|famed baker Leaftoe|Akrash|old Mistress Lomara/i }.noun
      end
      
      if checkbounty =~ /The.*is working on a concoction that requires (?:a|an|some) (.*) found/     
        herb = $1
      end
      
      herbs = EBounty.data.sacks["default"].contents.find_all { |i| i.name =~ /#{herb}/ }

      fput "store all" if checkleft or checkright
      fput "stow all" if checkleft or checkright

      herbs.each do |h|
        fput "_drag ##{h.id} right"
        res = dothistimeout("give ##{h.id} to #{herbalist}", 3, /This looks perfect|That looks like it has been partially used up/)

        #Fixme - check if hand empty before stowing
        if res !~ /perfect/
          fput "stow ##{h.id}"
        end
      end
      EBounty.msg("debug","forage_return: checkbounty - #{checkbounty}")
      sleep 3
      EBounty.msg("debug","forage_return: checkbounty - #{checkbounty} after 3")
      if checkbounty =~ /The.*is working on a concoction that requires (?:a|an|some) (.*) found/
        EBounty.go2_rest
        EBounty.msg("info","Didn't finish foraging task. Sleeping 3 minutes to let the room recover")
        sleep 180
      end
    
    end
    
    def self.gem_ask
      EBounty.msg("debug","gem_ask")
      
      if EBounty.data.settings[:bounty_types].include?("gem_collecting")       
        EBounty.go2("gemshop")
        if Room.current.id == 10327
          npc = "areacne"
        else
          npc = GameObj.npcs.find { |t| t.name =~ /dwarven clerk|gem dealer|jeweler|Zirconia|Brindlestoat/i }.noun
        end
        dothistimeout("ask #{npc} about bounty", 5, /Yes, I do have a task for you/)
        exit if EBounty.data.settings[:basic]
        sleep 2
      else
        Task.bounty_remove
      end       
    end
    
    def self.gem_bounty(kind = nil, amount = nil)
      EBounty.msg("debug","gem_bounty")
      #eventually use kind and amount for gem hording
      #Fixme: need time limit
     
      EBounty.data.remaining_gems = amount.to_i
      EBounty.data.gem = kind.gsub(/^a/, "")
      EBounty.data.wait = false
     
      profile = "#{EBounty.data.dir}/#{EBounty.data.settings[:default_profile]}.yaml"
      UserVars.op = YAML.load_file(profile)
 
      Hunting.go_hunting
      
      Task.bounty_check
     
    end
    
    def self.heirloom_bounty(item = nil, critter = nil, location = nil, type = nil)      
      EBounty.msg("debug","heirloom_bounty | item: #{item} | critter: #{critter} | location: #{location} | type: #{type}")
      
      if type =~ /loot/i && !EBounty.data.settings[:bounty_types].include?("heirloom_loot")
        Task.bounty_remove
      elsif type =~ /search/i && !EBounty.data.settings[:bounty_types].include?("heirloom_search")
        Task.bounty_remove
      end
       
      if type =~ /loot/i && EBounty.data.settings[:bounty_types].include?("heirloom_loot")
        EBounty.data.wait = false
        EBounty.switch_profile(critter, location)      
        Hunting.go_hunting       
        Task.bounty_check
      end
        
      if type =~ /search/i && EBounty.data.settings[:bounty_types].include?("heirloom_search")
        Task.heirloom_search(critter,location)
      end
      
    end
    
    def self.heirloom_search(critter,location) 
    
      EBounty.switch_profile(critter,location) 
 
      UserVars.op["hunting_prep_commands"].to_a.each { |i| fput(i) } unless UserVars.op["hunting_prep_commands"].to_s.empty?
           
      EBounty.go2(UserVars.op['hunting_room_id'])      
      wander_rooms ||= Array.new
      
      #fixme: need to support uid
      boundaries = UserVars.op['hunting_boundaries'].split(",")

      wander = proc {
        room = Room.current
        next_room_options = room.wayto.keys - boundaries
        next_room_options.delete_if { |room_id| (room.timeto[room_id].class == Proc) and room.timeto[room_id].call.nil? }
        next_room = next_room_options.find_all { |r| not wander_rooms.include?(r) }
        if next_room.empty?
          next_room = wander_rooms.find { |r| next_room_options.include?(r) }
        else
          next_room = next_room[rand(next_room.length)]
        end
        wander_rooms.delete(next_room)
        wander_rooms.push(next_room)
        way = room.wayto[next_room]
        if way.class == String 
          move(way)
        else
          way.call
        end
      }
      
      fput "stance defensive"
      
      loop{       
        unless GameObj.npcs        
          fput "kneel" until kneeling?         
          if checkleft or checkright
            empty_hands
          end           
          fput "search"            
          EBounty.wait_rt            
          fput "stand" until standing?            
          EBounty.wait_rt            
          seller = EBounty.data.settings[:selling_script]
          
          #Fixme: use looting script from profile
          if seller.nil? || seller.empty?
            Script.run('eloot')
          else
            Script.run(EBounty.data.settings[:selling_script])
          end                     
          fill_hands
        end
        
        break if checkbounty =~ /You have located/
        
        wander.call
        
      }
    
      Task.bounty_check
    
    
    end
    
    def self.skin_ask
      EBounty.msg("debug","skin_ask")
      
      if EBounty.data.settings[:bounty_types].include?("skinning")     
        EBounty.go2("furrier")    
        npc = GameObj.npcs.find { |t| t.name =~ /dwarven clerk|furrier|Delosa|Bramblefist/i }    
        dothistimeout("ask #{npc} about bounty", 5, /Yes, I do have a task for you/)
        sleep 2
        Task.bounty_check
      else
        Task.bounty_remove
      end       
    end
    
    def self.skin_bounty(critter,skin,quantity)
      EBounty.msg("debug","skin_bounty")
      #Find the critter
      
      EBounty.switch_profile(critter)
      
      EBounty.data.wait = false
      skin = skin.strip.downcase.
      gsub(/s$/, "").
      gsub(/teeth/, "tooth").
      gsub(/hooves?/, "hoof").
      gsub(/ruffs?/, "ruff")
    
      EBounty.data.remaining_skins = quantity.to_i + EBounty.data.settings[:extra_skin].to_i
      EBounty.data.skin = skin
      
      Hunting.go_hunting

      Task.bounty_check
     
    end
   
    def self.task_failed
      EBounty.msg("debug","task_failed")
            
      advguild_id = Room[EBounty.data.settings[:resting_room]].find_nearest_by_tag("advguild")
      EBounty.go2(advguild_id)
      
      #Turn in the bounty - Fixme: dothistimeout
      npc = GameObj.npcs.find{ |npc| npc.name =~ /(?:taskmaster|Halfwhistle)/i }
      fput "ask #{npc} about bounty"
      sleep 3
      
      #Lets get a bounty
      Task.bounty_check
      
    end
  
    def self.prep
      EBounty.msg("debug","prep")
      #lets make sure we are healed up - Need support for empaths 
      if XMLData.injuries.any? { |a,h| h['wound'] > 0 || h['scar'] > 1 } || percenthealth < 95
        healer = EBounty.data.settings[:healing_script]
        if healer.to_s.empty?
          Script.run('eherbs')   
        else
          Script.run(healer)
        end
      end
         
      #Sell stuff
      if EBounty.data.sacks["default"].contents.any? { |item| !item.sellable.nil? || item.type =~ /box/}
        seller = EBounty.data.settings[:selling_script]
        if seller.to_s.empty?
          Script.run('eloot', 'sell')
        else
          Script.run(seller, 'sell')
        end
      end
    
    end
  
    def self.wait_for_bounty()
      EBounty.msg("debug","wait_for_bounty")
  
      exit if EBounty.data.settings[:basic]
      
      profile = "#{EBounty.data.dir}/#{EBounty.data.settings[:default_profile]}.yaml"
      UserVars.op = YAML.load_file(profile)
      EBounty.data.wait = true
   
      Hunting.go_hunting      
        
      Task.bounty_check
    end
 
  end

end


EBounty.data.settings[:debug] = false


# Initialize default settings
unless EBounty.data
  EBounty.load(EBounty.load_profile())
end

#Kill script if dead
Thread.new { loop { Script.self.kill if dead?; sleep(5); }}

# Default to running bounties
if script.vars[1].nil?

  if Room.current.id.nil?   
    EBounty.msg "error", 'Please start ebounty in mapped room.'
    exit   
  else
    EBounty.data.start_room = Room.current.id
  end

  current_settings = UserVars.op
  EBounty.set_variables
  
  before_dying { 
    UserVars.op = current_settings
    EBounty.go2(EBounty.data.start_room) if EBounty.data.settings[:basic]
  }
  
  EBounty.bounty_check
  
  exit
end


case script.vars[1]
when 'help'
  EBounty.help
when 'list'
  EBounty::Setup.new(EBounty.data.settings).list 
when 'setup'
  EBounty::Setup.new(EBounty.data.settings).start
  EBounty.load(EBounty.load_profile())
  EBounty.set_variables
when 'load'
  EBounty.load(EBounty.load_profile)
  EBounty.set_variables
when 'remove'
  if Room.current.id.nil?   
    EBounty.msg "error", 'Please start ebounty in mapped room.'
    exit   
  else
    EBounty.data.start_room = Room.current.id
  end
  EBounty::Task.bounty_remove(true)
  EBounty.go2(EBounty.data.start_room)
when 'test'
  EBounty.test
end




