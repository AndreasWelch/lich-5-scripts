=begin

	This script exists to backup several primary files used by lich.

	Need to add a way to add and remove files to backup.

	Possible future addition may include:
		* the ability to upload the backup to another source.
		* the ability to save a given number of backups and delete anything additional.


	Author: Richard A. Secor (rsecor@rsecor.com) AKA Jahadeem
	Author Website: https://www.jahadeem.com
	Version: 0.0.2
	Date Created: 2019-09-14
	Date Updated: 2019-09-14
	game: All
	tags: backup, back up, lich, files, copy
	Usage: ;jbackup

	0.0.1 (2019-09-14): 
		Initial Version
	0.0.2 (2019-09-15):
		QOL updates

=end

require 'fileutils'

output = ""
backupFiles = [ 'alias.db3' , 'entry.dat' , 'lich.db3' ]

# Check to see if this script is being ran on startup 
if ( script.vars[ 1 ].downcase == 'help' )
	output.concat "This script exists to backup several primary files used by lich.\n"
	output.concat "Currenly it only backs up: alias.db3, entry.dat, and lich.db3\n"
	output.concat "This script requires trust.\n"
	output.concat "\n"
	output.concat "Please remember to clean out old backups on ocassion by hand.\n"
	output.concat "\n"
	output.concat "usage:\n"
	output.concat "\n"
	output.concat "   #{$clean_lich_char}#{script.name} 		Backup Files\n"
	output.concat "   #{$clean_lich_char}#{script.name} help	This help menu.\n"
	output.concat "\n"
	respond output
	exit
else
	# backup
	# "#{$lich_dir}data/inv.db3"	
	backupFiles.each do |file|
		fullfile = "#{$lich_dir}data/#{file}"
		if File.exists?(fullfile)
			if File.exist?(fullfile)
				sizeOrig = File.size(fullfile)
				backupTime = Time.new.strftime("%Y%m%d-%H%M%S")
				backupfullfile = "#{$lich_dir}data/#{file}.#{backupTime}"
				FileUtils.copy_file(fullfile,backupfullfile)
				sizeBackup = File.size(backupfullfile)
				if ( sizeOrig == sizeBackup )
					respond "Backup Success: #{fullfile} to #{backupfullfile}\n"
				else
					respond "Backup Size Mismatch: #{fullfile} to #{backupfullfile}\n"
				end
			else
				respond "ERROR: Not a file: #{fullfile}\n"
			end
		else
			respond "ERROR: Does not exist: #{fullfile}\n"
		end
		
	end
end

exit 
