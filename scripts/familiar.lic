=begin
    Familiar Upkeep Script
    A simple script to keep your familiar alive and active.
    Waits for the link to weaken and then refreshes 920.
    Currently set to refresh when at 15 minutes.
	
    SYNTAX - ;familiar

             --allowmove=<OFF/ON>
             Disables move on fizzle/interference

             --refreshtimer=#
             Sets refresh timer (defaults to 15)
	
       todo: none
     author: Tysong (horibu on PC)
       name: familiar
       tags: familiar, 920, wizard
    version: 1.4

    changelog:
        1.0 (2014-12-21)
            Initial Release
        1.1 (2017-07-18)
            Added detection of fizzled cast due to magic disabled room.
            Upon detection of fizzle, will wait till in new room to refresh.
        1.2 (2017-07-19)
            Changed fizzle detection to move to ;go2 node, cast, then return
            Will wait 10 seconds to give you option to ;k script incase don't want to
        1.3 (2018-07-03)
            Added restart of ;infomon if not tracking 920 time correctly
        1.4 (2018-08-20)
            Added additional interference detection
            Added option to not move away from room on fizzle/interfence, pauses script
            Added option to set refresh timer (defaults to 15)
			
    special thanks:
       Original author Annelie and tweaks by sele
=end

no_pause_all
no_kill_all
hide_me
UserVars.familiar				  ||= {}
UserVars.familiar[:allow_move]		= true 		if UserVars.familiar[:allow_move].nil?
UserVars.familiar[:refresh_timer]	= 15.0		if UserVars.familiar[:refresh_timer].nil?

if variable[1] && variable[1].downcase == "help"
	echo "This script will automatically refresh your familiar once you are under 15mins."
	echo "Start script by doing ;familiar"
	echo ""
	echo "Optional arguments:"
	echo "   ;familiar --allowmove=off"
	echo "    disables moving to node on fizzle/interference"
	echo "    defaults to ON"
	echo ""
	echo "   ;familiar --refreshtimer=#"
	echo "    sets time to refresh 920 too in minutes"
	echo "    defaults to 15 mins"
	exit
end

if variable[0].downcase =~ /--allowmove=(yes|no)/
	if $1 == 'yes'
		UserVars.familiar[:allow_move] = true
	else
		UserVars.familiar[:allow_move] = false
	end
end
if variable[0].downcase =~ /--refreshtimer=([0-9]{1,3})/
	UserVars.familiar[:refresh_timer] = $1.to_i
end

loop{
	wait_while {Spell[920].timeleft >= UserVars.familiar[:refresh_timer]}
	Script.pause("waggle") if Script.running?("waggle")
	wait_until { checkmana(5)}
		waitcastrt?
		waitrt?
		cast_result = Spell[920].cast
		if cast_result =~ /fizzle|interfere/
			if UserVars.familiar[:allow_move]
				echo "ALERT ALERT ALERT"
				echo "ALERT ALERT ALERT"
				echo ""
				echo "You failed to cast 920 here"
				echo "Pausing ;familiar"
				echo ""
				echo "Unpause to move away to closest node to refresh 920"
				echo ""
				echo "ALERT ALERT ALERT"
				echo "ALERT ALERT ALERT"
				pause_script
			end
			current_room = Room.current.id
			echo "Moving to a node to re-fresh familiar in 10 seconds"
			echo "Please ;k familiar before 10 seconds if you wish to stay"
			pause 10
			Script.run("go2", "node")
			waitrt?
			waitcastrt?
			Spell[920].cast
			pause 2
			Script.run("go2", "#{current_room.to_s}")
		else
			pause 4
			if Spell[920].timeleft < UserVars.familiar[:refresh_timer]
				if Script.running?("infomon")
					kill_script("infomon")
				end
				Script.start("infomon")
			end
		end
	Script.unpause("waggle") if Script.running?("waggle")
}
